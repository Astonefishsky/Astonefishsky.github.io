<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arduino+蓝牙初尝试</title>
    <url>/Arduino/Arduino-%E8%93%9D%E7%89%99%E5%88%9D%E5%B0%9D%E8%AF%95/</url>
    <content><![CDATA[<p>  使用Arduino连接蓝牙，并使用手机收发数据</p>
<span id="more"></span>

<p>师兄给的这个不知道是哪个型号的蓝牙模块，长得跟HC-05有点像但又不是，不过经测试，使用方法跟HC-05一致。主要参考<a href="https://blog.csdn.net/catzhaojia/article/details/119243058">Arduino连接蓝牙（HC-05）</a>和<a href="https://blog.csdn.net/qq_38410730/article/details/80368485">【常用模块】HC-05蓝牙串口通信模块使用详解（实例：手机蓝牙控制STM32单片机）</a></p>
<img src="lanya.jpg" alt="lanya" style="zoom: 33%;" />

<p>连接方式如下</p>
<img src="连接方式.png" alt="连接方式" style="zoom: 80%;" />

<p>样例代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SoftwareSerial.h&gt;</span> </span></span><br><span class="line"><span class="comment">// Pin10接HC05的TXD</span></span><br><span class="line"><span class="comment">// Pin11接HC05的RXD</span></span><br><span class="line"><span class="function">SoftwareSerial <span class="title">BT</span><span class="params">(<span class="number">10</span>, <span class="number">11</span>)</span></span>; </span><br><span class="line"><span class="keyword">char</span> val;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>); </span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;bluetooth is ready!&quot;</span>);</span><br><span class="line">  BT.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//读取缓冲区字符实现收发数据</span></span><br><span class="line">  <span class="keyword">if</span> (Serial.<span class="built_in">available</span>()) &#123;</span><br><span class="line">    val = Serial.<span class="built_in">read</span>();</span><br><span class="line">    BT.<span class="built_in">print</span>(val);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (BT.<span class="built_in">available</span>()) &#123;</span><br><span class="line">    val = BT.<span class="built_in">read</span>();</span><br><span class="line">    Serial.<span class="built_in">print</span>(val);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>烧入Arduino后，我们如果是第一次使用，要对蓝牙模块进行配置，根据<a href="%5B%5B%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97%5DHC-05%E8%93%9D%E7%89%99%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3%EF%BC%88%E5%AE%9E%E4%BE%8B%EF%BC%9A%E6%89%8B%E6%9C%BA%E8%93%9D%E7%89%99%E6%8E%A7%E5%88%B6STM32%E5%8D%95%E7%89%87%E6%9C%BA%EF%BC%89_%E8%93%9D%E7%89%99%E6%A8%A1%E5%9D%97hc05_Yngz_Miao%E7%9A%84%E5%8D%9A%E5%AE%A2-CSDN%E5%8D%9A%E5%AE%A2%5D(https://blog.csdn.net/qq_38410730/article/details/80368485)">这篇博客</a>的说法的说法，需要进入命令响应模式</p>
<blockquote>
<p>蓝牙模块的调试<br>HC-05蓝牙串口通讯模块具有两种工作模式：<strong>命令响应工作模式</strong>和<strong>自动连接工作模式</strong>。在自动连接工作模式下模块又可分为主（Master）、从（Slave）和回环（Loopback）三种工作角色。<br>当模块处于自动连接工作模式时，将自动根据事先设定的方式连接的数据传输；<br>当模块处于命令响应工作模式时能执行AT命令，用户可向模块发送各种AT 指令，为模块设定控制参数或发布控制命令。<br><strong>怎么进入命令响应工作模式？</strong><br>进入命令响应工作模式有两种方法：<br>模块上电，未配对情况下就是AT模式，波特率为模块本身的波特率，默认：9600，发送一次AT指令时需要置高一次PIO11；<br>PIO11 置高电平后，再给模块上电，此时模块进入AT 模式，波特率固定为：38400，可以直接发送AT指令。<br><strong>什么叫做置高一次PIO11？</strong><br>在蓝牙模块中有一个小按键，按一下就置高一次PIO11。也就是说，第一种方法需要每发送一次AT指令按一次；而第二种方式是长按的过程中上电，之后就无需再管了，直接发送AT命令即可。<br>需要注意一下，两种进入命令响应工作模式的方式使用的波特率是不一样的，<strong>建议使用第二种方式。</strong></p>
</blockquote>
<p>简单来讲，就是先给Arduino断电，然后按住蓝牙模块按钮的同时再给Arduino上电即可。</p>
<img src="20210730122053654.png" alt="AT" style="zoom: 67%;" />

]]></content>
      <categories>
        <category>Arduino</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>蓝牙</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino读取MPU-9250数据</title>
    <url>/Arduino/Arduino%E8%AF%BB%E5%8F%96MPU-9250%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p>Arduino与MPU-9250通过IIC实现数据传输并尝试使用蓝牙传输数据</p>
<span id="more"></span>

<p>在淘宝商家找的成品并仿照设计了外围电路和PCB板子，师兄焊了三个板子，好在有一个能用（可以看出芯片真的非常小，确实不好焊）</p>
<p><img src="1.jpg" alt="1" style="zoom: 10%;" /><img src="2.jpg" alt="2" style="zoom:10%;" /></p>
<p>参照网上的这篇文章[(17条消息) <a href="https://blog.csdn.net/Gregory24/article/details/90454735">MPU9250+Arduino/读取传感器数据</a>，跑了他的代码，幸运的可以跑通。这个教程和另外一篇csdn上的文案一模一样，我都不知道谁抄谁的，难绷。</p>
<img src="image-20230707112603099.png" alt="image-20230707112603099" style="zoom:50%;" />

<p>接下来的工作是搞懂代码，修改输出的数据形式，并用蓝牙传输。</p>
]]></content>
      <categories>
        <category>Arduino</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>蓝牙</tag>
        <tag>IMU</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next-8.17.1美化教程</title>
    <url>/Hexo/Hexo-Next-8-17-1%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p> 这几天也算是查资料+自己研究终于美化了一个自己较为满意的博客。</p>
<p>效果图如下，接下来上教程，版本是Hexo-6.0.0+Next-8.17.1，其它版本文件结构会有所不同。</p>
<p><img src="/Hexo/Hexo-Next-8-17-1%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/image-20230705111333616.png" alt="image-20230705111333616"></p>
<span id="more"></span>

<p>安装和部署可以看我另一篇博客《重拾hexo》，这篇只讲美化部分。</p>
<p>参考文档<a href="https://hexo-next.readthedocs.io/zh_CN/latest/">Hexo-NexT</a>以及<a href="https://zhuanlan.zhihu.com/p/30836436">Hexo+Next主题优化 - 知乎 (zhihu.com)</a>和<a href="https://zhuanlan.zhihu.com/p/252983030">Ubuntu + Hexo + Next 8.0 进阶美化篇二 - 知乎 (zhihu.com)</a></p>
<p>其中很多都可以<strong>在文档找到详细教程</strong>，建议手动查阅文档</p>
<h3 id="0-写在前面"><a href="#0-写在前面" class="headerlink" title="0.写在前面"></a>0.写在前面</h3><p>​    在写这篇教程的时候，我也学到了很多，对next主题的把握和美化过程有了更好的认知，因此有必要在前面写点内容。</p>
<p>​    首先是<code>NexT _config.yml</code>配置文件，配置文件是<strong>按块分布</strong>的，主要有Menu Settings、Sidebar Settings、Footer Settings、Post Settings、Custom Page Settings、Misc Theme Settings等等，可以从名字看出来每块主要的内容，我的这篇教程也因此是<strong>按块写</strong>的。官方文档和这个配置文件配合的很好，真的很建议配合文档食用。</p>
<p>​    然后是，不同版本Next的文件结构会有差异，按照教程美化的时候一定要学会方法。举个例子，在做菜单栏背景圆角和透明的时候，我参考网上的一篇教程，</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​    可是网页并没有发生反应，猜测是元素名字改变了，我在这个目录下寻找<code>blog\themes\next\source\css\_common\outline\header</code>，<code>index.styl</code>里并没有这个header-inner这个元素，相比之下，sidebar-inner就很好的发挥了作用，我尝试了菜单栏的其它元素，包括menu，site-meta，site-nav等等，总有一个白底留在那里，试了一个晚上，真的头疼。第二天早上，F12告诉我那个元素是header.header，试了以下，确实成功了。因此，学会怎么改是最重要的，毕竟，不一定每个版本都有教程。</p>
<p>​    另外，在尝试的过程中，对next的文件结构有了大致的把我，在next根目录中，next\layout中放置的html的相关内容，虽然没学过html，但是尝试着还是修改了部分内容，如修改了归档界面统计日志数量的那行字，删除了前面的语气和后面的“继续加油”。</p>
<p><img src="/Hexo/Hexo-Next-8-17-1%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/image-20230705162241300.png" alt="image-20230705162241300"></p>
<p>​    在<code>next\source\css</code>下则放着有关css的内容，熟悉文件命名的含义，就可以尝试着配合F12自行修改了，因为背景图片的原因，网页底部的灰色字体不太清楚，我就尝试着改成了黑色。当然，不建议这样修改源码，建议通过Next主题提供的个性化文件如styles.styl修改（下文会提到）。</p>
<p>​    最后有个小tips，建议本地预览，修改文件后保存刷新网页即可，不需要再过一遍hexo三连。</p>
<h3 id="1-切换布局样式"><a href="#1-切换布局样式" class="headerlink" title="1.切换布局样式"></a>1.切换布局样式</h3><p>在<code>NexT _config.yml</code>文件中修改，Next提供了四种布局，个人最喜欢Pisces，展示主题也是Pisces</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes </span><br><span class="line"># scheme: Muse </span><br><span class="line"># scheme: Mist </span><br><span class="line"> scheme: Pisces </span><br><span class="line"># scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>其中Gemini主题基本样式与Pisces相同，不同点在于网站默认界面在“归档”。</p>
<h3 id="2-添加背景图片"><a href="#2-添加背景图片" class="headerlink" title="2.添加背景图片"></a>2.添加背景图片</h3><p>在<code>NexT _config.yml</code>配置文件中找到这段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Define custom file paths.</span><br><span class="line"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span><br><span class="line">custom_file_path:</span><br><span class="line">  #head: source/_data/head.njk</span><br><span class="line">  #header: source/_data/header.njk</span><br><span class="line">  #sidebar: source/_data/sidebar.njk</span><br><span class="line">  #postMeta: source/_data/post-meta.njk</span><br><span class="line">  #postBodyStart: source/_data/post-body-start.njk</span><br><span class="line">  #postBodyEnd: source/_data/post-body-end.njk</span><br><span class="line">  #footer: source/_data/footer.njk</span><br><span class="line">  #bodyEnd: source/_data/body-end.njk</span><br><span class="line">  #variable: source/_data/variables.styl</span><br><span class="line">  #mixin: source/_data/mixins.styl</span><br><span class="line">  style: source/_data/styles.styl</span><br></pre></td></tr></table></figure>

<p>可以看到Next为我们提供了个性化的一些接口，去掉最后一行的注释，在<code>\blog\source\</code>文件夹中新建文件夹，命名为<code>_data</code>，在其中新建名为<code>styles.styl</code>的文件，打开编辑，输入以下内容。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//全局布局美化代码</span><br><span class="line">//url:Bolg/themes/next/source/images</span><br><span class="line">body &#123;</span><br><span class="line">    background-image:<span class="built_in">url</span>(<span class="string">/images/Background.jpg</span>);</span><br><span class="line">//图像是否重复</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">//图像固定</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">//图像位置</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">//宽高占屏幕百分比</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>手动在<code>blog/themes/next/source/images</code>中放入图片命名为Background.jpg即可</p>
<h3 id="3-菜单栏修改"><a href="#3-菜单栏修改" class="headerlink" title="3.菜单栏修改"></a>3.菜单栏修改</h3><p>在<code>NexT _config.yml</code>文件中找到菜单栏部分</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br></pre></td></tr></table></figure>

<h4 id="3-1-板块数量修改"><a href="#3-1-板块数量修改" class="headerlink" title="3.1 板块数量修改"></a>3.1 板块数量修改</h4><p>默认的菜单栏只有“首页”和“关于”两个板块，Next为我们提供了其它可选项，在<code>NexT _config.yml</code>文件中修改。</p>
<p>找到Menu Settings，可以看到menu下有很多其它可选项，通过用法说明可以明白，冒号前是板块名字，后面分别是目录和图标，其中图标可以自行到<a href="https://fontawesome.dashgame.com/">Font Awesome，一套绝佳的图标字体库和CSS框架 (dashgame.com)</a>替换成心仪的图标。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Usage: `Key: /link/ || icon`</span><br><span class="line"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span><br><span class="line"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line"># External url should start with http:// or https://</span><br><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>

<p>可以参考我的配置，我增加了标签(tags)、分类(categories)和归档(archives)。</p>
<p>另外，还需要对一些选项进行配置，建议参考<a href="https://hexo-next.readthedocs.io/zh_CN/latest/next/base/%E8%8F%9C%E5%8D%95%E6%A0%8F/">菜单栏 - Hexo-NexT</a></p>
<p>配置文件中紧随其后可以对菜单后面的数字进行设置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Enable / Disable menu icons / item badges.</span><br><span class="line">menu_settings:</span><br><span class="line">  icons: true</span><br><span class="line">  badges: true</span><br></pre></td></tr></table></figure>

<p>badges设置为true可以显示数字。</p>
<h4 id="3-2-自定义菜单"><a href="#3-2-自定义菜单" class="headerlink" title="3.2 自定义菜单"></a>3.2 自定义菜单</h4><p>除了给出的配置外，也可以<strong>自定义</strong>，比如，我想增加一个读书笔记，先去font awesome网站找到一个合适的图标，复制链接。然后在菜单新增一行<code>readnotes: /readnotes/ || fa fa-book</code>，到根目录输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page readnotes</span><br></pre></td></tr></table></figure>

<p>这个时候本地预览就能看到新的菜单了，不过显示是英文，而且不能新增笔记什么的，所以我们还要进行其它配置</p>
<img src="image-20230706115610737.png" alt="image-20230706115610737" style="zoom:50%;" />

<p>首先到<code>source/readnotes/index.md</code>里，修改如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: 读书笔记</span><br><span class="line">date: 2023-07-06 11:52:27</span><br><span class="line">type: readnotes</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<p>然后到<code>blog\themes\next\languages\zh-CN.yml</code>里，menu下新增一行映射<code>readnotes: 读书笔记</code>，这样显示的就会是中文了</p>
<p>接下来是定制点击读书笔记菜单后出现的页面，我们可以仿照“归档”的页面，归档是以时间线呈现的</p>
<h4 id="3-3-搜索服务"><a href="#3-3-搜索服务" class="headerlink" title="3.3 搜索服务"></a>3.3 搜索服务</h4><p>参考<a href="https://hexo-next.readthedocs.io/zh_CN/latest/next/advanced/%E6%90%9C%E7%B4%A2%E6%9C%8D%E5%8A%A1/">搜索服务 - Hexo-NexT</a></p>
<h4 id="3-4-样式修改"><a href="#3-4-样式修改" class="headerlink" title="3.4 样式修改"></a>3.4 样式修改</h4><p>在<code>styles.styl</code>文件中添加以下内容，可根据我的注释按个人喜好修改</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//菜单栏整体背景</span><br><span class="line"><span class="selector-tag">header</span><span class="selector-class">.header</span> &#123;</span><br><span class="line">	//距离最上边的距离</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    //背景颜色，最后一个参数<span class="number">0</span>-<span class="number">1</span>代表透明度，越低越透明</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">0.7</span>);</span><br><span class="line">    //圆角，分别为左上，右上，右下，左下</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">    //阴影</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);   	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏上部黑框</span><br><span class="line"><span class="selector-class">.site-brand-container</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.9</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-侧边栏修改"><a href="#4-侧边栏修改" class="headerlink" title="4.侧边栏修改"></a>4.侧边栏修改</h3><p>在<code>NexT _config.yml</code>配置文件中找到这段，侧边栏设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings</span><br><span class="line"># See: https://theme-next.js.org/docs/theme-settings/sidebar</span><br><span class="line"># ---------------------------------------------------------------</span><br></pre></td></tr></table></figure>

<h4 id="4-1-添加头像"><a href="#4-1-添加头像" class="headerlink" title="4.1 添加头像"></a>4.1 添加头像</h4><p>在后面找到头像设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line">  url: /images/first.png #</span><br><span class="line">  # If true, the avatar will be displayed in circle.</span><br><span class="line">  rounded: true</span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure>

<p>url后面为头像的地址，具体在<code>blog\themes\next\source\images</code></p>
<p>rounded：代表头像框类型，true为圆形，false为方形</p>
<p>rotated：为头像旋转特效，true时，鼠标放在头像上会旋转。</p>
<h4 id="4-2-添加github链接和email"><a href="#4-2-添加github链接和email" class="headerlink" title="4.2 添加github链接和email"></a>4.2 添加github链接和email</h4><p>继续在配置文件下方找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Social Links</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/yourgithubname || fab fa-github</span><br><span class="line">  E-Mail: mailto:youremail@126.com || fa fa-envelope</span><br><span class="line">  #Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class="line">  #Twitter: https://twitter.com/yourname || fab fa-twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || fab fa-facebook</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || fab fa-youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || fab fa-instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || fab fa-skype</span><br></pre></td></tr></table></figure>

<p>social:后为可以添加的内容，格式也在usage中说明了，可以根据需要添加，也可以自定义内容。</p>
<h4 id="4-3-样式修改"><a href="#4-3-样式修改" class="headerlink" title="4.3 样式修改"></a>4.3 样式修改</h4><p>修改透明度，添加圆角和阴影。</p>
<p>在<code>styles.styl</code>中添加以下内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">0.7</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>每一行的意义可以参考<a href="#3.%E8%8F%9C%E5%8D%95%E6%A0%8F%E4%BF%AE%E6%94%B9">3.菜单栏修改</a></p>
<h3 id="5-文章部分修改"><a href="#5-文章部分修改" class="headerlink" title="5.文章部分修改"></a>5.文章部分修改</h3><p>在<code>NexT _config.yml</code>中找到Post Setting部分</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings</span><br><span class="line"># See: https://theme-next.js.org/docs/theme-settings/posts</span><br><span class="line"># ---------------------------------------------------------------</span><br></pre></td></tr></table></figure>

<h4 id="5-1-增加更新日期和字数统计"><a href="#5-1-增加更新日期和字数统计" class="headerlink" title="5.1 增加更新日期和字数统计"></a>5.1 增加更新日期和字数统计</h4><p>更新日期：在<code>NexT _config.yml</code>中post setting 下方找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at:</span><br><span class="line">    enable: true</span><br><span class="line">    another_day: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure>

<p>updated_at:enable后设置为true，即可显示更新日期。</p>
<p>字数统计可以参考<a href="https://hexo-next.readthedocs.io/zh_CN/latest/next/advanced/%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1/">字数统计 - Hexo-NexT</a></p>
<h4 id="5-2-打开文章底部tag图标"><a href="#5-2-打开文章底部tag图标" class="headerlink" title="5.2 打开文章底部tag图标"></a>5.2 打开文章底部tag图标</h4><p>继续在<code>NexT _config.yml</code>中post setting 下方找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span><br><span class="line">tag_icon: true</span><br></pre></td></tr></table></figure>

<p>设置为true即可</p>
<h4 id="5-3-添加评论"><a href="#5-3-添加评论" class="headerlink" title="5.3 添加评论"></a>5.3 添加评论</h4><p>暂时使用gitalk，参考[<a href="https://hexo-next.readthedocs.io/zh_CN/latest/next/advanced/gitalk-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/">Gitalk]评论系统 - Hexo-NexT</a></p>
<p>可以使用<a href="http://blog.daovoice.io/daovocie_manhua/?utm_source=DaoCloud&utm_campaign=39_campaign&utm_medium=daovoice_widget&utm_term=footer_link&utm_content=one_min">DaoVoice </a></p>
<h4 id="5-4-样式修改"><a href="#5-4-样式修改" class="headerlink" title="5.4 样式修改"></a>5.4 样式修改</h4><h5 id="5-4-1-分割线修改"><a href="#5-4-1-分割线修改" class="headerlink" title="5.4.1 分割线修改"></a>5.4.1 分割线修改</h5><p>原版首页文章之间是以间距与一条短横线作为分文标记的，可以修改也可以删除</p>
<p>进入<code>bolg/themes/next/source/css/_common/components/post/post-footer.styl</code>，找到</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-eof</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: $grey-light;</span><br><span class="line">  //不想要横线的可以删除下面三行</span><br><span class="line">  //修改宽度</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">3px</span>;</span><br><span class="line">  //修改离正文距离</span><br><span class="line">  <span class="attribute">margin</span>: $post-eof-margin-top auto $post-eof-margin-bottom;</span><br><span class="line">  //修改长度占比</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-block</span><span class="selector-pseudo">:last-of-type</span> &amp; &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我这边删除了短横线，为下一步美化做准备。</p>
<h5 id="5-4-2-post背景设置为透明"><a href="#5-4-2-post背景设置为透明" class="headerlink" title="5.4.2 post背景设置为透明"></a>5.4.2 post背景设置为透明</h5><p>在<code>styles.styl</code>中添加以下内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">    //控制元素内边距，依次为上右下左</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">40px</span> <span class="number">40px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="5-4-3-宽度修改"><a href="#5-4-3-宽度修改" class="headerlink" title="5.4.3 宽度修改"></a>5.4.3 宽度修改</h5><p>修改文件<code>source/css/_variables/Pisces.styl</code>，根据主题选择修改的文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$content-desktop              = &#x27;calc(100% - %s)&#x27; % unit($content-desktop-padding / 2, &#x27;px&#x27;);</span><br><span class="line">$content-desktop-large        = 80em;</span><br><span class="line">$content-desktop-largest      = 80%;</span><br></pre></td></tr></table></figure>

<p>主要影响元素为第二行，多修改尝试即可</p>
<h5 id="5-4-4-post-block样式修改"><a href="#5-4-4-post-block样式修改" class="headerlink" title="5.4.4 post-block样式修改"></a>5.4.4 post-block样式修改</h5><p>post-block就是右侧的一篇篇文章板块</p>
<p>在<code>styles.styl</code>中添加以下内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span>&#123;</span><br><span class="line">    	//背景颜色及透明度</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">    	//设置元素的顶部外边离相邻元素的距离</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">24px</span>;</span><br><span class="line">    	//设置元素的底部外边离相邻元素的距离</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">24px</span>;</span><br><span class="line">    	//控制元素内边距</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    	//圆角</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">    	//阴影</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-网页底部修改"><a href="#6-网页底部修改" class="headerlink" title="6.网页底部修改"></a>6.网页底部修改</h3><h4 id="6-1-心形修改"><a href="#6-1-心形修改" class="headerlink" title="6.1 心形修改"></a>6.1 心形修改</h4><p>提供两种改动方式：1.改为其它图标。2.改为其它文字或者删除。</p>
<p>第一种：在<code>NexT _config.yml</code>中找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Footer Settings</span><br><span class="line"># See: https://theme-next.js.org/docs/theme-settings/footer</span><br><span class="line"># ---------------------------------------------------------------</span><br></pre></td></tr></table></figure>

<p>往下找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">icon:</span><br><span class="line">  # Icon name in Font Awesome. See: https://fontawesome.com/icons</span><br><span class="line">  name: fa fa-heart</span><br><span class="line">  # If you want to animate the icon, set it to true.</span><br><span class="line">  animated: false</span><br><span class="line">  # Change the color of icon, using Hex Code.</span><br><span class="line">  color: &quot;#ff0000&quot;</span><br></pre></td></tr></table></figure>

<p>可以修改图标开关、内容、和颜色</p>
<p>第二种：进入<code>blog\themes\next\layout\_partials\footer.njk</code>，找到相似部分并修改，我这里由于修改过，不记得原文了，这里是把心形修改为了“by”（第6行），当然也可以直接删除。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.footer.copyright !== false %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;copyright&quot;</span>&gt;</span></span><br><span class="line">    &#123;%- set copyright_year = date(null, &#x27;YYYY&#x27;) %&#125;</span><br><span class="line">    <span class="symbol">&amp;copy;</span> &#123;% if theme.footer.since and theme.footer.since != copyright_year %&#125;&#123;&#123; theme.footer.since &#125;&#125; – &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">&quot;copyrightYear&quot;</span>&gt;</span>&#123;&#123; copyright_year &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span> by <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;author&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;copyrightHolder&quot;</span>&gt;</span>&#123;&#123; theme.footer.copyright or author &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="6-2-强力驱动修改"><a href="#6-2-强力驱动修改" class="headerlink" title="6.2 强力驱动修改"></a>6.2 强力驱动修改</h4><p>提供两种修改方式：1.关闭功能。2.修改文字</p>
<p>第一种：在<code>NexT _config.yml</code>中找到footer setting部分后，继续往下找到<code>powered</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Powered by Hexo &amp; NexT</span><br><span class="line">powered: true</span><br></pre></td></tr></table></figure>

<p>设置为false即可关闭</p>
<p>同理可以开关<code>copyright</code>部分</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># If not defined, `author` from Hexo `_config.yml` will be used.</span><br><span class="line"># Set to `false` to disable the copyright statement.</span><br><span class="line">copyright:</span><br></pre></td></tr></table></figure>

<p>第二种：进入<code>blog\themes\next\layout\_partials\footer.njk</code>，找到最后部分，改为如下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.footer.powered %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;Thanks&quot;</span>&gt;</span></span><br><span class="line">    &#123;%- set next_site = &#x27;https://theme-next.js.org&#x27;  + &#x27;/&#x27; %&#125;</span><br><span class="line">    &#123;&#123;- __(&#x27; Thanks &#x27; + next_url(&#x27;https://hexo.io&#x27;, &#x27;Hexo&#x27;) + &#x27; &amp; &#x27; + next_url(next_site, &#x27;NexT&#x27;)) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p>这是修改后的效果，可以自行修改为其它文字</p>
<p><img src="/Hexo/Hexo-Next-8-17-1%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/image-20230705152458588.png" alt="image-20230705152458588"></p>
<h3 id="7-其它美化"><a href="#7-其它美化" class="headerlink" title="7.其它美化"></a>7.其它美化</h3><h4 id="7-1-右上角增加github"><a href="#7-1-右上角增加github" class="headerlink" title="7.1 右上角增加github"></a>7.1 右上角增加github</h4><p>在<code>NexT _config.yml</code>中找到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># `Follow me on GitHub` banner in the top-right corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/Astonefishsky</span><br></pre></td></tr></table></figure>

<p>设置为true并修改链接即可</p>
<h4 id="7-2-静态资源压缩"><a href="#7-2-静态资源压缩" class="headerlink" title="7.2 静态资源压缩"></a>7.2 静态资源压缩</h4><p>老规矩，先上版本<img src="image-20230705180717912.png" alt="image-20230705180717912" style="zoom:50%;" /></p>
<p>在部署到github上访问时，图片总是加载的很慢很慢，于是采用静态资源压缩的方式加快访问速度。</p>
<p>在blog目录下安装gulp，和相关插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css --save</span><br><span class="line">npm install gulp-uglify --save</span><br><span class="line">npm install gulp-htmlmin --save</span><br><span class="line">npm install gulp-htmlclean --save</span><br><span class="line">npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure>

<p>在blog根目录新建文件gulpfile.js，写入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlmin&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>);</span><br><span class="line"><span class="comment">//var imageminGifsicle = import(&#x27;imagemin-gifsicle&#x27;);</span></span><br><span class="line"><span class="comment">//var imageminMozjpeg = import(&#x27;imagemin-mozjpeg&#x27;);</span></span><br><span class="line"><span class="comment">//var imageminOptipng = import(&#x27;imagemin-optipng&#x27;);</span></span><br><span class="line"><span class="comment">//var imageminSvgo = import(&#x27;imagemin-svgo&#x27;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩html</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            <span class="attr">removeComments</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">minifyJS</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">minifyCSS</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">minifyURLs</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩css</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">        .pipe(minifycss(&#123;</span><br><span class="line">            <span class="attr">compatibility</span>: <span class="string">&#x27;ie8&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩js</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/js/**/*.js&#x27;</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 压缩图片</span></span><br><span class="line">gulp.task(<span class="string">&#x27;minify-images&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">&#x27;./public/images/**/*.*&#x27;</span>)</span><br><span class="line">        .pipe(imagemin(</span><br><span class="line">        <span class="comment">//imageminGifsicle (&#123;&#x27;optimizationLevel&#x27;: 3&#125;), </span></span><br><span class="line">        <span class="comment">//imageminMozjpeg(&#123;&#x27;progressive&#x27;: true&#125;), </span></span><br><span class="line">       <span class="comment">// imageminOptipng(&#123;&#x27;optimizationLevel&#x27;: 7&#125;), </span></span><br><span class="line">       <span class="comment">// imageminSvgo()],</span></span><br><span class="line">        &#123;<span class="string">&#x27;verbose&#x27;</span>: <span class="literal">true</span>&#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public/images&#x27;</span>))</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 默认任务【gulp4写法】</span></span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>,gulp.parallel( <span class="string">&#x27;minify-html&#x27;</span>,<span class="string">&#x27;minify-css&#x27;</span>,<span class="string">&#x27;minify-js&#x27;</span>,<span class="string">&#x27;minify-images&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>因为不可知原因一直error，所以压缩图片部分代码被我注释掉了</p>
<img src="image-20230705180602479.png" alt="image-20230705180602479" style="zoom:50%;" />

<p>不过实测可用</p>
<img src="image-20230705180635290.png" alt="image-20230705180635290" style="zoom:50%;" />



<h4 id="7-3-翻页按钮"><a href="#7-3-翻页按钮" class="headerlink" title="7.3 翻页按钮"></a>7.3 翻页按钮</h4><p>设置背景后，由于翻页部分背景默认透明且按钮透明，所以要修改一下按钮部分。</p>
<p>在<code>styles.styl</code>中添加以下内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//翻页按钮</span><br><span class="line"><span class="selector-class">.page-number</span> &#123;</span><br><span class="line">	//白色近透明</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">0.85</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">2px</span> <span class="number">2px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);    </span><br><span class="line">&#125;</span><br><span class="line">//翻页框</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">255</span> ,<span class="number">0.7</span>);</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当前选中按钮的颜色要到原代码文件中修改，找到<code>themes\next\source\css\_common\scaffolding\pagination.styl</code>和<code>themes\next\source\css\_variables\base.styl</code>，在<code>pagination.styl</code>中可以看到如下，选中按钮的背景颜色为<code>$pagination-active-bg</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">$page-number-current &#123;</span><br><span class="line">  <span class="attribute">background</span>: $pagination-active-bg;</span><br><span class="line">  <span class="attribute">border-color</span>: $pagination-active-border;</span><br><span class="line">  <span class="attribute">color</span>: $pagination-active-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们打开<code>base.styl</code>，找到<code>$pagination-active-bg</code>,修改为想要的颜色即可，如我这里修改为橙色</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$orange-light     =#ff9933</span><br><span class="line">$pagination-active-bg           = $orange-light;</span><br></pre></td></tr></table></figure>

<p>其它部分可同理按喜好修改</p>
<h4 id="7-4-字体修改"><a href="#7-4-字体修改" class="headerlink" title="7.4 字体修改"></a>7.4 字体修改</h4><p>7.5 添加站长验证</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Next</tag>
        <tag>博客美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Next主题在首页显示图片</title>
    <url>/Hexo/Next%E4%B8%BB%E9%A2%98%E5%9C%A8%E9%A6%96%E9%A1%B5%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p> 无意间发现的一种显示图片的方法。</p>
<span id="more"></span>

<p>在尝试自定义菜单栏，然后打算模仿post-collapse文件写一个新模板时，发现它有一行是 <code>&#123;&#123; post_gallery(post.photos) &#125;&#125;</code>（23行）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">&quot;http://schema.org/Article&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;post-header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">time</span> <span class="attr">itemprop</span>=<span class="string">&quot;dateCreated&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">datetime</span>=<span class="string">&quot;&#123;&#123; moment(post.date).format() &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">content</span>=<span class="string">&quot;&#123;&#123; date(post.date, config.date_format) &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; date(post.date, &#x27;MM-DD&#x27;) &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;post-title&quot;</span>&gt;</span></span><br><span class="line">      &#123;%- if post.link %&#125;&#123;# Link posts #&#125;</span><br><span class="line">        &#123;%- set postTitleIcon = &#x27;<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-external-link-alt&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#x27; %&#125;</span><br><span class="line">        &#123;%- set postText = post.title or post.link %&#125;</span><br><span class="line">        &#123;&#123; next_url(post.link, postText + postTitleIcon, &#123;class: &#x27;post-title-link post-title-link-external&#x27;, itemprop: &#x27;url&#x27;&#125;) &#125;&#125;</span><br><span class="line">      &#123;% else %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;post-title-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; post.title or __(&#x27;post.untitled&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      &#123;%- endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;&#123; post_gallery(post.photos) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>于是猜想这是显示图片用的，但是具体图片的链接是什么呢，尝试着在文章头部加了一条新的属性photos，然后仿照在正文里插入图片的方法，写了图片的链接（正文里图片链接根目录为同名文件夹），即<code>photos: test.jpg</code>，但是意外的是，图片并没有正常显示。</p>
<p>我打开F12，定位到图片位置，发现为<code>img src = &quot;/test.jpg&quot;</code>，对比了一下正文后，我发现了问题所在。在Hexo处理之后，它会根据根目录下<code>_config.yml</code>里<code>permalink: :category/:title/</code>，来将内容放置在public文件夹下。按照我的设置，它是放置在<code>public/Hexo/Next主题在首页显示图片/</code>下，于是我修改链接为<code>Hexo/Next主题在首页显示图片/test.jpg</code>后，图片成功显示，效果如下：</p>
<img src="/image-20230706165412088.png" alt="image-20230706165412088" style="zoom:50%;" />

<p>同样，图片在归档界面同样会显示，如果不想显示的话，可以在<code>blog\themes\next\layout\_macro\post-collapse.njk</code>中删去那一行。</p>
<p>值得一提的是，如果有每篇文章都显示图片的需求，可以在<code>blog\scaffolds\post.md</code>中加上photos这一行，但是，<code>photos: categories/:title/test.jpg</code>这样的写法并不有效。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>图片显示</tag>
      </tags>
  </entry>
  <entry>
    <title>c++期末笔记</title>
    <url>/SJTU/c-%E6%9C%9F%E6%9C%AB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>程序设计思想与方法-期末复习</p>
<span id="more"></span>

<h2 id="显示字符串首地址"><a href="#显示字符串首地址" class="headerlink" title="显示字符串首地址"></a>显示字符串首地址</h2><p>如果这样</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">5</span>] = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">cout&lt;&lt;str;</span><br></pre></td></tr></table></figure>

<p>并不会输出字符串首地址，而是会将这个地址作为一个字符串的首地址，输出这个地址以后的所有内容，直到遇到结束符’\0’。如，这个例子输出结果为”abcd“。</p>
<p>所以可以这样</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">5</span>] = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">cout&lt;&lt;(<span class="keyword">void</span>*)str;</span><br></pre></td></tr></table></figure>

<p>把字符指针，强制转化为void 指针，void * 指的是，这个指针可以指向任何类型的数据。这样输出结果就是str的首地址。</p>
<h2 id="结构体内存分配"><a href="#结构体内存分配" class="headerlink" title="结构体内存分配"></a>结构体内存分配</h2><p>首先，结构在C语言中也是一种数据类型，叫做聚组类型（还包括数组）。他和其他的数据类型是一样的，在定义一个结构体的时候，系统并不会为他真正的分配内存空间(定义的结构体变量要在编译的阶段才分配空间，而结构体指针要显示的使用malloca来分配空间)，也就是说，在定义结构体这种数据类型的时候是不会分配内存空间的，只有在定义变量的时候，才会分配。</p>
<p>下面是摘自百度百科 对结构题存储的三点：</p>
<p><strong>1) 结构体变量的首地址能够被其最宽基本类型成员的大小所整除；</strong>　　</p>
<p><strong>2) 结构体每个成员相对于结构体首地址的偏移量都是成员大小的整数倍，如有需要编译器会  在成员之间加上填充字节；</strong></p>
<p><strong>3) 结构体的总大小为结构体最宽基本类型成员大小的整数倍，如有需要编译器会在最末一个成员之后加上填充字节</strong></p>
<p><strong>下面是来自《c和指针》的介绍</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s1</span>&#123;</span></span><br><span class="line">　　<span class="keyword">char</span> a;</span><br><span class="line">　　<span class="keyword">int</span> b;</span><br><span class="line">　　<span class="keyword">char</span> c;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>首先，结构体在存储的时候，结构体的首地址必须能够被其中最宽数据类型整除。（在s1中，最宽数据类型为int，在32位系统中为4Byte），</strong></p>
<p><strong>其次，参照第二条，第一个数据时char（已经保证了，结构的起始地址是4的整数倍），存储一个char,占一个Byte,要保证下一个int的存储起始地址是4的整数倍，所以要在char后面填充三个Byte，然后在存储第三个数据。</strong></p>
<p><strong>第三，最后一个也是char类型，他就占一个Byte，肯定是他存储位置的整数倍，最后参照第三条，结构体的总大小为最宽数据类型的整数倍，所以会在第二个char之后再填充三个Byte。</strong></p>
<p><strong>这样的话，总共占据的空间是1+3+4+1+3 = 12（红色为填充字符）</strong></p>
<p><strong>【但是】，调换一下结构中数据成员的顺序</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s1</span>&#123;</span></span><br><span class="line">　　<span class="keyword">int</span> b;</span><br><span class="line">　　<span class="keyword">char</span> a;</span><br><span class="line">　　<span class="keyword">char</span> c;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>同样地分析4+1+1+2 = 8</strong></p>
<p><strong>相比之下，存储空间的效率提高33%。</strong></p>
<p>以下是系统对结构体的内存分配的详细介绍：</p>
<p>1、结构体变量的首地址是结构体中最宽数据类型的整数倍。</p>
<p>　　编译器在给结构体开辟空间时，首先找到结构体中最宽的基本数据类型，然后寻找内存地址能是该基本数据类型的整倍的位置，作为结构体的首地址。</p>
<p><strong>2</strong>、结构体每个成员相对于结构体首地址的偏移量（offset）都是成员大小的整数倍，如有需要编译器会在成员之间加上填充字节。</p>
<p>　　为结构体的一个成员开辟空间之前，编译器首先检查预开辟空间的首地址相对于结构体首地址的偏移是否是本成员的整数倍，若是，则存放本成员，反之，则在本成员和上一个成员之间填充一定的字节，以达到整数倍的要求，也就是将预开辟空间的首地址后移几个字节。</p>
<p><strong>3、结构体的总大小为结构体中最宽基本数据成员的整数倍。如有需要，编译器将会在结构体的添加填充字符。</strong></p>
<p><strong>4、结构体中的数据成员按照所占空间从大到小的顺序来排列的话，这样存储空间就会得以提高。</strong></p>
<p><strong>4、现在对四条进行修正。在组织数据结构的数据成员的时候，可以将相同类型的成员放在一起，这样就减少了编译器为了对齐而添加的填充字符。</strong></p>
<p>【摘自<a href="https://www.cnblogs.com/qiumingcheng/p/11297988.html">结构体的内存分配机制 - 邱明成 - 博客园 (cnblogs.com)</a>】</p>
<h2 id="C-建立动态二维数组"><a href="#C-建立动态二维数组" class="headerlink" title="C++建立动态二维数组"></a>C++建立动态二维数组</h2><h3 id="1-使用数组指针，分配一个指针数组，将其首地址保存在b中，然后再为指针数组的每个元素分配一个数组"><a href="#1-使用数组指针，分配一个指针数组，将其首地址保存在b中，然后再为指针数组的每个元素分配一个数组" class="headerlink" title="1.使用数组指针，分配一个指针数组，将其首地址保存在b中，然后再为指针数组的每个元素分配一个数组"></a>1.使用数组指针，分配一个指针数组，将其首地址保存在b中，然后再为指针数组的每个元素分配一个数组</h3><p>​              </p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">int</span> **b=<span class="keyword">new</span> <span class="keyword">int</span>*[row];       <span class="comment">//分配一个指针数组，将其首地址保存在b中                                         for(i=0;i&lt;row;i++)             //为指针数组的每个元素分配一个数组</span></span><br><span class="line">           b[i]=<span class="keyword">new</span> <span class="keyword">int</span>[col];</span><br><span class="line">      </span><br><span class="line">   <span class="comment">// 该方法定义的动态二维数组的释放需先释放指针数组的每个元素指向的数组，然后再释放该指针数组：</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">	&#123;</span><br><span class="line">    	<span class="keyword">delete</span> [col]b[i];</span><br><span class="line">        b[i]=<span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">delete</span> [row]b;</span><br><span class="line">b=<span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>
<p>具体实现</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> _tmain(<span class="keyword">int</span> argc, _TCHAR* argv[])</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> row,column;</span><br><span class="line">	cin&gt;&gt;row&gt;&gt;column;</span><br><span class="line"><span class="comment">//方法一</span></span><br><span class="line"><span class="comment">//申请空间</span></span><br><span class="line">	<span class="keyword">int</span> ** a = <span class="keyword">new</span> <span class="keyword">int</span> *[row];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)</span><br><span class="line">	a[i] = <span class="keyword">new</span> <span class="keyword">int</span>[column];</span><br><span class="line"> </span><br><span class="line"><span class="comment">//使用空间</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k&lt; column;k++)</span><br><span class="line">		a[j][k] = <span class="built_in">rand</span>()%<span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)</span><br><span class="line">&#123;</span><br><span class="line">	cout&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k&lt; column;k++)</span><br><span class="line">	&#123;</span><br><span class="line">		a[j][k] = <span class="built_in">rand</span>()%<span class="number">100</span>;</span><br><span class="line">		cout&lt;&lt;a[j][k]&lt;&lt;<span class="string">&quot;     &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line"><span class="comment">//释放空间</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span> a[i];</span><br><span class="line">	a[i] = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="keyword">delete</span> [row]a;</span><br><span class="line">	a = <span class="literal">NULL</span>;	</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="2-利用vector"><a href="#2-利用vector" class="headerlink" title="2.利用vector"></a>2.利用vector</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> _tmain(<span class="keyword">int</span> argc, _TCHAR* argv[])</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> row,column;</span><br><span class="line">	cin&gt;&gt;row&gt;&gt;column;</span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line"><span class="comment">//申请空间</span></span><br><span class="line">	vector&lt;vector&lt;<span class="keyword">int</span>&gt; &gt; <span class="built_in">a</span>(row,vector&lt;<span class="keyword">int</span>&gt;(column));</span><br><span class="line"><span class="comment">//使用空间</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k&lt; column;k++)</span><br><span class="line">			a[j][k] = <span class="built_in">rand</span>()%<span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)</span><br><span class="line">&#123;</span><br><span class="line">	cout&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k&lt; column;k++)</span><br><span class="line">	&#123;</span><br><span class="line">		a[j][k] = <span class="built_in">rand</span>()%<span class="number">100</span>;</span><br><span class="line">		cout&lt;&lt;a[j][k]&lt;&lt;<span class="string">&quot;     &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;		</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>SJTU</category>
      </categories>
      <tags>
        <tag>期末复习</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo与typora图片显示问题</title>
    <url>/Hexo/hexo%E4%B8%8Etypora%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>可以说是困扰了将近两年的问题，终于被解决了！</p>
<span id="more"></span>

<p>在我昨天开始写重拾hexo这篇博客的时候，我提到了这个图片显示问题，主要原因是<strong>二者相对路径不统一</strong>。</p>
<p>在旧hexo2上，大多博主采用下载插件方式解决问题，即hexo-asset-image的方式，但随着hexo的更新，hexo-asset-image已经失效，而且官方给出新的嵌入图片的方式。</p>
<img src="image-20230630150252331.png" alt="image-20230630150252331" style="zoom: 67%;" />

<p>经我几番查找，终于找到一个完美的解决方案<a href="https://zhuanlan.zhihu.com/p/265077468">hexo博客如何插入图片 - 知乎 (zhihu.com)</a></p>
<p>首先，按照官方方式将post_asset_folder设置为true，这会使hexo创建新文章时同时在相同目录下创建同名文件夹。</p>
<p>然后在typore的偏好设置中这样设置：</p>
<img src="image-20230630150637228.png" alt="image-20230630150637228" style="zoom:67%;" />

<p>这样，在插入图片时就会放入hexo生成的那个文件夹中了。</p>
<p>最后，在typora-格式-图像-设置图片根目录为hexo生成的文件夹，就能保持hexo和typora二者相对路径保持一致了，完美！</p>
<p>每个文件都要手动设置根目录是绝对不行的，在最后一步中，我们可以发现，设置完根目录后，只是在md文件的开头部分新增了typora-root-url: 根目录，因此，我们可以将其添加进模板中，即进入scaffolds文件夹，进入post.md，添加一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">typora-root-url: &#123;&#123; title &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>至此，算是彻底解决了这个长久以来的问题。</p>
<hr>
<p>发现了个小问题，在直接复制时，typora总会在路径保留一个“/”，不去掉的话，在hexo上无法预览，下面就是一个例子。</p>
<img src="/usb-1688110147484.jpg" alt="usb" style="zoom:67%;" />]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>图片显示</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Arduino的智能物流小车</title>
    <url>/SJTU/%E5%9F%BA%E4%BA%8EArduino%E7%9A%84%E6%99%BA%E8%83%BD%E7%89%A9%E6%B5%81%E5%B0%8F%E8%BD%A6/</url>
    <content><![CDATA[<p><em>工程实践项目：基于Arduino板的智能物流小车</em></p>
<p>我的第一篇博客，就拿工程实践水一下了。</p>
<span id="more"></span>

<h2 id="场地示意图"><a href="#场地示意图" class="headerlink" title="场地示意图"></a>场地示意图</h2><p><img src="/SJTU/%E5%9F%BA%E4%BA%8EArduino%E7%9A%84%E6%99%BA%E8%83%BD%E7%89%A9%E6%B5%81%E5%B0%8F%E8%BD%A6/img1.jpg"></p>
<h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>​        从出发区到达原料区，依次搬运三个物块到加工区，最后回到返回区。</p>
<p>​        虽然听着挺简单，但实际操作过程中遇到了太多的问题，比如由于安装不精确导致四个轮子不是那么完美，在写程序时直接让四个轮子速度相等并不能使小车走直线，而且四个轮子启动顺序也会对小车的方向产生微妙的影响。然后就是如何让小车平移，也需要精确调节四个轮子的速度。</p>
<p>​        接下来吐槽几句。令人蛋疼的是，学校提供的锂电池并不是恒压电池，而且程序是通过控制电压的高低来控制电机速度的，这就导致，==写的程序各个参数只能对标很小一段范围的电压==，在调试过程中会经常出现电池电压越用越低，参数不停的调的情况，充电后发现原来的程序又用不了了。唉~（这是一段很长的叹气）此外，锂电池电压充满电时大概是12.3V，这个电压对我们所用的Arduino UNO板子来说有点过高，很容易导致板子烧坏。（这也是我们用了五六块板子的部分原因，哈哈哈）也就是说，充满电的电池还不能用，得悠着点充电（笑哭）。</p>
<h2 id="Arduino程序"><a href="#Arduino程序" class="headerlink" title="Arduino程序"></a>Arduino程序</h2><p>==注：这段程序只是我个人记录用，留个纪念罢了，不要拿来直接用，会gg的（虽然不太可能有人看到）。==</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MotorController4WD.h&quot;</span></span></span><br><span class="line"><span class="comment">//#include &quot;QGPMaker_IICSensorbar.h&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;QGPMaker_MotorShield.h&quot;</span></span></span><br><span class="line"><span class="function">MotorController4WD <span class="title">motorController</span><span class="params">(<span class="number">1</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const byte IIC_ADDRESS = 0x3F; </span></span><br><span class="line"><span class="comment">//SensorBar io;</span></span><br><span class="line"><span class="comment">//电机</span></span><br><span class="line">QGPMaker_MotorShield AFMS = <span class="built_in">QGPMaker_MotorShield</span>(); </span><br><span class="line">QGPMaker_DCMotor *myMotor1 = AFMS.<span class="built_in">getMotor</span>(<span class="number">1</span>);</span><br><span class="line">QGPMaker_DCMotor *myMotor2 = AFMS.<span class="built_in">getMotor</span>(<span class="number">2</span>);</span><br><span class="line">QGPMaker_DCMotor *myMotor3 = AFMS.<span class="built_in">getMotor</span>(<span class="number">3</span>);</span><br><span class="line">QGPMaker_DCMotor *myMotor4 = AFMS.<span class="built_in">getMotor</span>(<span class="number">4</span>);</span><br><span class="line"><span class="comment">//舵机</span></span><br><span class="line">QGPMaker_Servo *myServo0 = AFMS.<span class="built_in">getServo</span>(<span class="number">0</span>);</span><br><span class="line">QGPMaker_Servo *myServo2 = AFMS.<span class="built_in">getServo</span>(<span class="number">2</span>);</span><br><span class="line">QGPMaker_Servo *myServo4 = AFMS.<span class="built_in">getServo</span>(<span class="number">4</span>);</span><br><span class="line">QGPMaker_Servo *myServo6 = AFMS.<span class="built_in">getServo</span>(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//int sensor[5] = &#123;0, 0, 0, 0, 0&#125;;   //没用到巡线传感器</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> initial_motor_speed = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zhua</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fang</span><span class="params">()</span></span>; </span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>); <span class="comment">//串口波特率115200（PC端使用）</span></span><br><span class="line">  </span><br><span class="line">  AFMS.<span class="built_in">begin</span>(); </span><br><span class="line">  motorController.<span class="built_in">begin</span>();</span><br><span class="line">  </span><br><span class="line"><span class="built_in">delay</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">100</span>;i&gt;<span class="number">60</span>;i--)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">6</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">40</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">10</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-20</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">10</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">5300</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//机械臂伸直</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">2</span>, <span class="number">25</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">4</span>, <span class="number">88</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line"><span class="comment">//夹子张开</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">110</span>;i&gt;<span class="number">60</span>;i--)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">6</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">40</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="comment">//第一个来回</span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-11</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-11</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1160</span>);</span><br><span class="line">  <span class="comment">//抓</span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">zhua</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2370</span>);</span><br><span class="line"></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">fang</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-6</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-6</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">4000</span>);</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">20</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">400</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//第二个来回  </span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-9</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-9</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">810</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">zhua</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-8</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-8</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2370</span>);</span><br><span class="line"></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">fang</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-3</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-3</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">4000</span>);</span><br><span class="line"></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">20</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">400</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">50</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//第三个来回</span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-11</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-11</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">zhua</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);  </span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-2</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2370</span>);</span><br><span class="line"></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">fang</span>();</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//回到返回区</span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">10</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-20</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-10</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed+<span class="number">10</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">6000</span>);</span><br><span class="line">       </span><br><span class="line">  myMotor1-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">run</span>(BACKWARD);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">run</span>(FORWARD);</span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-3</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-3</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(initial_motor_speed<span class="number">-7</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//停下</span></span><br><span class="line">  myMotor1-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor3-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor2-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  myMotor4-&gt;<span class="built_in">setSpeed</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">1000</span>);    </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">zhua</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&lt;<span class="number">40</span>;i+=<span class="number">2</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">40</span>,j=<span class="number">25</span>;i&lt;<span class="number">145</span>;i+=<span class="number">4</span>,j+=<span class="number">5</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">2</span>, j);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//爪子夹紧</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">60</span>;i&lt;<span class="number">110</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">6</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">30</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    <span class="comment">//收回</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">145</span>,j=<span class="number">155</span>;i&gt;<span class="number">40</span>;i-=<span class="number">4</span>,j-=<span class="number">5</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">2</span>, j);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">40</span>;i&gt;<span class="number">20</span>;i-=<span class="number">2</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fang</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">25</span>;i&lt;<span class="number">150</span>;i++)&#123;</span><br><span class="line">motorController.<span class="built_in">writeServo</span>(<span class="number">2</span>, i);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">88</span>;i&gt;<span class="number">65</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">  motorController.<span class="built_in">writeServo</span>(<span class="number">4</span>, i);</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">15</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">300</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&lt;<span class="number">145</span>;i++)&#123;</span><br><span class="line">motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, <span class="number">145</span>);</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">15</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">delay</span>(<span class="number">1000</span>);</span><br><span class="line">  </span><br><span class="line"><span class="comment">//松开爪子+</span></span><br><span class="line"><span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">110</span>;i&gt;<span class="number">60</span>;i--)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">6</span>, i);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">30</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">500</span>);</span><br><span class="line">    <span class="comment">//收回</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">145</span>,j=<span class="number">145</span>;i&gt;<span class="number">40</span>;i-=<span class="number">4</span>,j-=<span class="number">5</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">2</span>, j);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">40</span>;i&gt;<span class="number">20</span>;i-=<span class="number">2</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    motorController.<span class="built_in">writeServo</span>(<span class="number">0</span>, i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>这次工程实践比赛时也出现了板子烧坏的情况，端口消失，没能上传改过参数的代码，结果就直接寄了。虽然感觉有种这几天夜都白熬的感觉，不过，也学到了不少。（比如，<del>arduino板是非常脆弱的？</del>应该是我们操作不太行，以后就知道怎么呵护这块板子了hhh）</p>
]]></content>
      <categories>
        <category>SJTU</category>
      </categories>
      <tags>
        <tag>Arduino</tag>
        <tag>物流小车</tag>
      </tags>
  </entry>
  <entry>
    <title>大学生心理健康开卷参考资料</title>
    <url>/SJTU/%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%BF%83%E7%90%86%E5%81%A5%E5%BA%B7%E5%BC%80%E5%8D%B7%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<p>SJTU心理健康开卷考试  参考资料</p>
<span id="more"></span>

<p><strong>心理咨询</strong>——定义——罗杰斯&amp;帕特森</p>
<p><strong>保密原则</strong> <strong>保密例外</strong>——（对社会和他人有严重危害 未成年人侵犯与虐待 违反法律法规）</p>
<p><strong>什么情况下需要心理咨询</strong>：状态异常，异常状态持续两周以上，且影响到自己的学习生活，对社会有很大影响时（情感与性，自我探索，学业压力，适应性问题，发展性……，障碍性……）</p>
<p><strong>心理健康的标准（马斯洛和米特尔曼）</strong></p>
<p>是否有充分的安全感</p>
<p>是否对自己有较充分地了解，并能恰当地评价自己的行为</p>
<p>自己的生活理想和目标是否切合实际</p>
<p>能否与周围环境事物保持良好的接触</p>
<p>能否保持自我人格的完整与和谐</p>
<p>能否具备从经验中学习的能力</p>
<p>能否保持适当和良好的人际关系</p>
<p>能否适度地表达和控制自己的情绪</p>
<p>能否在集体允许的前提下，有限地发挥自己的个性</p>
<p>能否在社会规范的范围内，适当地满足个人的基本要求</p>
<p><strong>四大流派</strong></p>
<p><strong>精神分析流——</strong>童年，潜意识（冰山理论），人格理论（本我自我超我），弗洛伊德</p>
<p><strong>行为主义——</strong>行为训练，系统脱敏法，强化</p>
<p><strong>人本主义—</strong>—人本善，同感，真诚，尊重，爱自己，神秘主义与潜能开发，成长与意义</p>
<p><strong>超个人心理学——</strong>超意识，濒死体验，冥想，穿越和潜能解放</p>
<p><strong>自杀风险——</strong>言语线索，行为线索</p>
<h2 id="2、MBTI要素（Myers-Briggs-Type-Indicator提出者为迈耶斯和布里奇斯）"><a href="#2、MBTI要素（Myers-Briggs-Type-Indicator提出者为迈耶斯和布里奇斯）" class="headerlink" title="2、MBTI要素（Myers Briggs Type Indicator提出者为迈耶斯和布里奇斯）"></a><strong>2</strong>、<strong>MBTI要素（Myers Briggs Type Indicator提出者为迈耶斯和布里奇斯）</strong></h2><table>
<thead>
<tr>
<th>注意力方向</th>
<th>外向</th>
<th>E(Extrovert)</th>
<th>内向</th>
<th>I(Introvert)</th>
</tr>
</thead>
<tbody><tr>
<td>认知方式（如何搜集信息）</td>
<td>直觉</td>
<td>N(Inituition)</td>
<td>知觉</td>
<td>S(Sensing)</td>
</tr>
<tr>
<td>判断方式（如何做决定）</td>
<td>理性</td>
<td>T(Thinking)</td>
<td>感性</td>
<td>F(Feeling)</td>
</tr>
<tr>
<td>生活方式（如何应对不确定性）</td>
<td>判断</td>
<td>J(Judgement)</td>
<td>感觉</td>
<td>P(Perceiving)</td>
</tr>
</tbody></table>
<h3 id="2-1-内向与外向"><a href="#2-1-内向与外向" class="headerlink" title="2.1 内向与外向"></a><strong>2.1</strong> <strong>内向与外向</strong></h3><p>内向者聚焦于内心世界，从思想、记忆和经验中汲取能量</p>
<p>外向者聚焦于外部，从与人相处中汲取能量</p>
<p>内向者喜欢独立思考，书面沟通，不公开自己的批判性想法</p>
<p>外向者与人交流，越说越明白</p>
<h3 id="2-2-直觉与知觉"><a href="#2-2-直觉与知觉" class="headerlink" title="2.2 直觉与知觉"></a><strong>2.2</strong> <strong>直觉与知觉</strong></h3><p>直觉者关注全局（森林）</p>
<p>知觉者关注细节（树木）</p>
<h3 id="2-3-思考与感觉"><a href="#2-3-思考与感觉" class="headerlink" title="2.3 思考与感觉"></a><strong>2.3</strong> <strong>思考与感觉</strong></h3><p>思考者（对事）：理性分析客观事实，考虑所有与具体情况相关的已知、可证明因素，富有逻辑地决定如何行动；</p>
<p>感觉者（对人）：关注人与人之间的和谐，富有同理心，善于人际沟通和人际关系的建立</p>
<h3 id="2-4-判断与感觉"><a href="#2-4-判断与感觉" class="headerlink" title="2.4 判断与感觉"></a><strong>2.4</strong> <strong>判断与感觉</strong></h3><p>判断者：喜欢井然有序的生活与工作</p>
<p>感觉者：喜欢灵活、随性</p>
<h2 id="3、人格特质理论——大五人格"><a href="#3、人格特质理论——大五人格" class="headerlink" title="3、人格特质理论——大五人格"></a><strong>3、人格特质理论——大五人格</strong></h2><p>理论提出者为麦克雷（RR.Mccrae）和科斯塔（PT.Costa）</p>
<p><strong>开放性</strong>（openness）：具有想象、审美、情感丰富、求异、创造、智能等特质</p>
<p><strong>责任心</strong>（conscientiousness）：显示胜任、弓正、条理、尽职、成就、自律、谨慎、克制等特点</p>
<p><strong>外倾性</strong>（extroversion）：表现出热情、社交、果断、活跃、冒险、乐观等特质</p>
<p><strong>宜人性</strong>（agreeableness）：具有信任、利他、直率、依从、谦虚、移情等特质</p>
<p><strong>神经质性</strong>（neuroticism）：难以平衡焦虑、敌对、压抑、自我意识、冲动、脆弱等情绪的特质，即不具有保持情绪稳定的能力</p>
<h2 id="4、关系的重要性（马斯洛需要层次论的视角）"><a href="#4、关系的重要性（马斯洛需要层次论的视角）" class="headerlink" title="4、关系的重要性（马斯洛需要层次论的视角）"></a><strong>4、关系的重要性（马斯洛需要层次论的视角）</strong></h2><p>自我实现的需求（如，发挥潜能、实现理想）</p>
<p>尊重的需求（如，受到尊重与肯定）</p>
<p>社会需求（如，爱情、友谊、归属感）</p>
<p>安全需求（如对保护、秩序、稳定的需要）</p>
<p>生理需求（如身体对食物、温暖、性的需要）</p>
<h2 id="5、善用人际交往中的心理效应"><a href="#5、善用人际交往中的心理效应" class="headerlink" title="5、善用人际交往中的心理效应"></a><strong>5、善用人际交往中的心理效应</strong></h2><h3 id="5-1-晕轮效应"><a href="#5-1-晕轮效应" class="headerlink" title="5.1  晕轮效应"></a><strong>5.1</strong>  <strong>晕轮效应</strong></h3><p>晕轮效应，指人们看问题时，像日晕一样，由一个中心点逐步向外扩散成越来越大的圆圈，是一种在突出特征这一晕轮或光环的影响下而产生的以点带面、以偏概全的社会心理效应</p>
<h3 id="5-2-投射效应"><a href="#5-2-投射效应" class="headerlink" title="5.2 投射效应"></a><strong>5.2</strong> <strong>投射效应</strong></h3><p>投射效应是将自己的特点归因到他人身上的倾向，即以己度人，认为自己具有某种特性，他人也一定会有与自己相同的特性，把自己的感情、意志、特性投射到他人身上并强加于人</p>
<h3 id="5-3-刻板效应"><a href="#5-3-刻板效应" class="headerlink" title="5.3 刻板效应"></a><strong>5.3</strong> <strong>刻板效应</strong></h3><p>人们头脑中关于某一类人的固定印象的心理现象</p>
<h3 id="5-4-首因效应"><a href="#5-4-首因效应" class="headerlink" title="5.4 首因效应"></a><strong>5.4</strong> <strong>首因效应</strong></h3><p>交往双方形成的第一次印象对今后交往关系的影响，也即是“先入为主”带来的效果。</p>
<h3 id="5-5、登门槛效应"><a href="#5-5、登门槛效应" class="headerlink" title="5.5、登门槛效应"></a><strong>5.5、登门槛效应</strong></h3><p>又称得寸进尺效应，是指一个人一旦接受了他人的一个微不足道的要求，为了避免认知上的不协调，或想给他人以前后一致的印象，就有可能接受更大的要求。</p>
<h2 id="6、罗伯特森·斯滕伯格的爱情三角理论"><a href="#6、罗伯特森·斯滕伯格的爱情三角理论" class="headerlink" title="6、罗伯特森·斯滕伯格的爱情三角理论"></a><strong>6、罗伯特森·斯滕伯格的爱情三角理论</strong></h2><p><img src="/SJTU/%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%BF%83%E7%90%86%E5%81%A5%E5%BA%B7%E5%BC%80%E5%8D%B7%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/1.png"></p>
<h3 id="6-1-亲密"><a href="#6-1-亲密" class="headerlink" title="6.1 亲密"></a><strong>6.1</strong> <strong>亲密</strong></h3><p>亲密包括热情、理解、沟通、支持和分享等爱情关系中的常见特征</p>
<p>亲密主要是情感性的</p>
<h3 id="6-2-激情"><a href="#6-2-激情" class="headerlink" title="6.2 激情"></a><strong>6.2</strong> <strong>激情</strong></h3><p>主要特征为性的唤醒和欲望，激情场常以性渴望的形式出现，但任何能使伴侣感到满足的情感需要都可以归为此类</p>
<p>激情主要是动机或驱力</p>
<h3 id="6-3-承诺"><a href="#6-3-承诺" class="headerlink" title="6.3 承诺"></a><strong>6.3</strong> <strong>承诺</strong></h3><p>承诺指投身于爱情和努力维护爱情的决心</p>
<p>承诺本质是认知性的</p>
<h2 id="7、依恋类型与亲密关系——陌生人情景测试"><a href="#7、依恋类型与亲密关系——陌生人情景测试" class="headerlink" title="7、依恋类型与亲密关系——陌生人情景测试"></a><strong>7、依恋类型与亲密关系——陌生人情景测试</strong></h2><p>情侣关系与早期亲子关系类似</p>
<h3 id="7-1-安全型依恋风格"><a href="#7-1-安全型依恋风格" class="headerlink" title="7.1 安全型依恋风格"></a><strong>7.1</strong> <strong>安全型依恋风格</strong></h3><p>容易接近他人，在亲密关系里感到舒适放松</p>
<p>依靠他人很自在，很少担心被抛弃，相信他人的善良</p>
<p>相信自己的价值，值得爱</p>
<h3 id="7-2-回避型依恋风格"><a href="#7-2-回避型依恋风格" class="headerlink" title="7.2 回避型依恋风格"></a><strong>7.2</strong> <strong>回避型依恋风格</strong></h3><p>接近他人时不自在，难以信任依靠他人</p>
<p>他人接近时感到紧张和不舒服</p>
<p>避免和人亲密，害怕受伤害</p>
<h3 id="7-3-焦虑矛盾性依恋风格"><a href="#7-3-焦虑矛盾性依恋风格" class="headerlink" title="7.3 焦虑矛盾性依恋风格"></a><strong>7.3</strong> <strong>焦虑矛盾性依恋风格</strong></h3><p>感觉他人在疏远自己，至少没有像自己期望的那样</p>
<p>期待与他人关系亲密，但经常怀疑对方是否真心愿意和自己一起</p>
<p>怀疑自己的价值，感觉别人会拒绝自己</p>
<p>蜷缩在自己的世界，或者过度依赖亲密关系</p>
<h3 id="7-4-依恋类型的稳定性"><a href="#7-4-依恋类型的稳定性" class="headerlink" title="7.4 依恋类型的稳定性"></a><strong>7.4</strong> <strong>依恋类型的稳定性</strong></h3><p>随着个人生活的改变，人的依恋类型可以发生变化</p>
<h2 id="8、汉斯·赛利的压力模型——压力反应三阶段"><a href="#8、汉斯·赛利的压力模型——压力反应三阶段" class="headerlink" title="8、汉斯·赛利的压力模型——压力反应三阶段"></a><strong>8、汉斯·赛利的压力模型——压力反应三阶段</strong></h2><h3 id="8-1-警戒阶段（Alarm）"><a href="#8-1-警戒阶段（Alarm）" class="headerlink" title="8.1 警戒阶段（Alarm）"></a><strong>8.1</strong> <strong>警戒阶段（Alarm）</strong></h3><p>有机体无论什么时候遇到一个紧张刺激都会引起躯体内部的生理生化、体内环境平衡、内脏机能的变化，即生物有机体自身会动员起来进行适应性防御</p>
<h3 id="8-2-抵御阶段（Resistance）"><a href="#8-2-抵御阶段（Resistance）" class="headerlink" title="8.2 抵御阶段（Resistance）"></a><strong>8.2</strong> <strong>抵御阶段（Resistance）</strong></h3><p>有机体在肾上腺素分泌增加之后，就会出现心律、呼吸加快、血压增加、血糖含量增加等变化，以便充分动员替内的潜能应付环境变化刺激的威胁</p>
<h3 id="8-3-衰竭阶段（Exhaustion）"><a href="#8-3-衰竭阶段（Exhaustion）" class="headerlink" title="8.3 衰竭阶段（Exhaustion）"></a><strong>8.3</strong> <strong>衰竭阶段（Exhaustion）</strong></h3><p>紧张刺激所致的威胁继续存在或躯体仍然像存在着威胁那样进行反应，抵御就会持续下去，必须的适应能力可能耗尽，最后出现崩溃。这时机体会被其自身的防御力量所损害，导致疾病。</p>
<h2 id="9、压力的耶基斯·多德森曲线"><a href="#9、压力的耶基斯·多德森曲线" class="headerlink" title="9、压力的耶基斯·多德森曲线"></a><strong>9、压力的耶基斯·多德森曲线</strong></h2><p><img src="/SJTU/%E5%A4%A7%E5%AD%A6%E7%94%9F%E5%BF%83%E7%90%86%E5%81%A5%E5%BA%B7%E5%BC%80%E5%8D%B7%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/%E5%8E%8B%E5%8A%9B%E6%9B%B2%E7%BA%BF.png"></p>
<p><strong>压力管理的要义</strong>   压力管理的要义不是消灭压力，而是驾驭压力</p>
<h2 id="10、SJTU心理咨询预约方式"><a href="#10、SJTU心理咨询预约方式" class="headerlink" title="10、SJTU心理咨询预约方式"></a><strong>10、SJTU心理咨询预约方式</strong></h2><p>网络预约  上海交通大学心擎网 <a href="http://www.xinqing.sjtu.edu.com/">www.xinqing.sjtu.edu.com</a></p>
<p>微信预约  “上海交通大学心理咨询中心”微信公众号</p>
<p>紧急上门求助</p>
<h2 id="11、心理咨询的概念"><a href="#11、心理咨询的概念" class="headerlink" title="11、心理咨询的概念"></a><strong>11、心理咨询的概念</strong></h2><p>心理咨询是“通过与个体持续的、直接的接触，向其提供心理援助并促进其行为、态度变化的过程”。                    ——Rogers</p>
<p>咨询是一种人际关系，在这种关系中咨询人员提供一定的心理气氛或条件，使对象发生变化，做出选择，解决自己的问题，并且形成一个有责任感，拥有独立个体，从而成为更好的人和更好的社会成员。                 ——Patterson</p>
<h2 id="12、罗杰斯提出的成功心理咨询要素"><a href="#12、罗杰斯提出的成功心理咨询要素" class="headerlink" title="12、罗杰斯提出的成功心理咨询要素"></a><strong>12、罗杰斯提出的成功心理咨询要素</strong></h2><h3 id="12-1-同感（empathy-共情or同理心）"><a href="#12-1-同感（empathy-共情or同理心）" class="headerlink" title="12.1 同感（empathy,共情or同理心）"></a><strong>12.1</strong> <strong>同感（empathy,共情or同理心）</strong></h3><p>指咨询师设身处地的从来访者的参照标准去体会其内心感受，领悟其思想、观念和情感，从而达到对来访者情况准确理解的一种态度和能力</p>
<p>同感可以帮助咨询师更深度地理解来访者，使来访者感到自己被理解被接纳，促进来访者自我表达和自我探索等</p>
<h3 id="12-2-真诚"><a href="#12-2-真诚" class="headerlink" title="12.2 真诚"></a><strong>12.2</strong> <strong>真诚</strong></h3><p>真诚指咨询师要以真实的自我面貌出现，不带任何自我防卫式的伪装，以开放、自由的面貌投入到心理咨询当中</p>
<p>真诚能让来访者产生信任感和安全感</p>
<h3 id="12-3-尊重"><a href="#12-3-尊重" class="headerlink" title="12.3 尊重"></a><strong>12.3</strong> <strong>尊重</strong></h3><p>尊重是指咨询师以平等、民主的方式来接纳、关注来访者（包括他们的现状、价值观以及人格特点和合理权益）的一种态度和能力</p>
<p>尊重可以为来访者创造一个安全、温暖的氛围，使其最大限度地表露自己。</p>
<p>尊重有助于来访者获得自我价值感，认识并发挥自身的潜能</p>
<h2 id="13-心理咨询的伦理"><a href="#13-心理咨询的伦理" class="headerlink" title="13 心理咨询的伦理"></a><strong>13</strong> <strong>心理咨询的伦理</strong></h2><h3 id="13-1-善行"><a href="#13-1-善行" class="headerlink" title="13.1 善行"></a><strong>13.1</strong> <strong>善行</strong></h3><p>心理咨询师工作的目的是使寻求专业服务者从其提供的专业服务中获益。心理咨询师应保障寻求专业服务者的权利，努力使其得到适当的服务并避免伤害</p>
<h3 id="13-2-责任"><a href="#13-2-责任" class="headerlink" title="13.2 责任"></a><strong>13.2</strong> <strong>责任</strong></h3><p>心理咨询师在工作中应保持其专业服务的最高水准，对自己的行为承担责任，认清自己专业的、伦理及法律的责任，维护专业信誉</p>
<h3 id="13-3-诚信"><a href="#13-3-诚信" class="headerlink" title="13.3 诚信"></a><strong>13.3</strong> <strong>诚信</strong></h3><p>心理咨询师在临床实践活动、研究和教学工作中，应努力保持其行为的诚实性和真实性</p>
<h3 id="13-4-公正"><a href="#13-4-公正" class="headerlink" title="13.4 公正"></a><strong>13.4</strong> <strong>公正</strong></h3><p>心理咨询师应公平、公正地对待自己的专业工作及其他人员。心理咨询师应采取谨慎的态度防止自己潜在的偏见、能力局限、技术的限制等导致的不适当行为</p>
<h3 id="13-5-尊重"><a href="#13-5-尊重" class="headerlink" title="13.5 尊重"></a><strong>13.5</strong> <strong>尊重</strong></h3><p>心理咨询师应尊重每一个人，尊重个人的隐私权，保密性和自我决定的权利</p>
<h2 id="14、弗洛伊德理论简说"><a href="#14、弗洛伊德理论简说" class="headerlink" title="14、弗洛伊德理论简说"></a><strong>14、弗洛伊德理论简说</strong></h2><h3 id="14-1-弗洛伊德的人格学说"><a href="#14-1-弗洛伊德的人格学说" class="headerlink" title="14.1 弗洛伊德的人格学说"></a><strong>14.1</strong> <strong>弗洛伊德的人格学说</strong></h3><p><strong>本我</strong></p>
<p>本我是人格中最原始、最模糊和最不易把握的部分，是由一切与生俱来的冲动组成，依据快乐原则行事，寻求无条件的即刻满足</p>
<p>主要是性的力量</p>
<p><strong>自我</strong></p>
<p>自我是现实化了的本能，是在现实的反复教训之下从本我分化出来的部分</p>
<p>依据现实原则行事，所谓识时务者为俊杰</p>
<p><strong>超我</strong></p>
<p>超我是理想自我，是从自我发展起来的一部分，是道德化了的自我</p>
<h3 id="14-2-心理防御机制"><a href="#14-2-心理防御机制" class="headerlink" title="14.2 心理防御机制"></a><strong>14.2</strong> <strong>心理防御机制</strong></h3><p>自我同时照顾三个主人：外部世界、超我和本我，压力山大，产生焦虑</p>
<p>为了应对焦虑，产生防御机制</p>
<p>防御机制类型：</p>
<p>A、压抑</p>
<p>压抑为将社会伦理道德所不容的，意识上不能接受的冲动、欲望，在不知不觉中抑制在无意识水平，令人自己也不能意识到它们的存在</p>
<p>B、投射</p>
<p>把自己的愿望与动机归于他人，断言他人有此动机、愿望</p>
<p>C、否认</p>
<p>有意识或无意识地拒绝承认那些使人感到焦虑痛苦的事件，似乎其从未发生过</p>
<p>D、退行</p>
<p>当遇到挫折和应激时，心理活动退回至较早年龄阶段水平，以原始、幼稚额的方法应付当前情境</p>
<p>E、固着</p>
<p>心理尚未完全成熟，停滞在某一心理发展水平</p>
<p>F、升华</p>
<p>把为社会、超我所不能接受、不能容许的冲动的能量转化为建设性的活动能量</p>
<p>G、置换</p>
<p>因某事物而起的强烈情绪和冲动不能直接发泄到这个对象上去，就转移到另一对象上去了</p>
<p>H、抵消</p>
<p>以从事某种象征性的活动来抵消、抵制一个人的真实感情</p>
<p>I、反向形成</p>
<p>把无意识中不能被接受的欲望或冲动转化为意识之中的相反行为</p>
<h2 id="15、艾尔伯特埃利斯的合理情绪疗法（RET-Rational-Emotive-Behavior-Therapy）"><a href="#15、艾尔伯特埃利斯的合理情绪疗法（RET-Rational-Emotive-Behavior-Therapy）" class="headerlink" title="15、艾尔伯特埃利斯的合理情绪疗法（RET Rational Emotive Behavior Therapy）"></a><strong>15、艾尔伯特埃利斯的合理情绪疗法（RET Rational Emotive Behavior Therapy）</strong></h2><p>合理情绪疗法、理性情绪疗法</p>
<p>人的情绪困扰由于非理性的观念所致</p>
<p>咨询方向纠正非理性观念</p>
<p><strong>埃利斯的ABCDE情绪管理理论</strong></p>
<p>A：Activating Events 诱发事件</p>
<p>B：Beliefs 个体对诱发事件的评价、解释、看法</p>
<p>C：Consequences  个体情绪和行为的结果</p>
<p>D：Disputing 指同不合理的信念辩论</p>
<p>E：Effects 指通过疏通产生积极地情绪和行为</p>
<p>不是由A导致C，而是由B导致C</p>
<p><strong>不合理信念的特征</strong></p>
<h3 id="15-1-绝对化要求"><a href="#15-1-绝对化要求" class="headerlink" title="15.1 绝对化要求"></a><strong>15.1</strong> <strong>绝对化要求</strong></h3><p>对事物的绝对化要求，是指人们以自己的意愿为出发点对某一事物怀有认为其必定发生或不会发生的信念。这种信念通常是以“必须”和“应该”这类字眼联系在一起的</p>
<h3 id="15-2-过分概括化"><a href="#15-2-过分概括化" class="headerlink" title="15.2 过分概括化"></a><strong>15.2</strong> <strong>过分概括化</strong></h3><p>过分概括化是一种以偏概全、以一概十的不合理思维方式</p>
<h3 id="15-3-糟糕至极"><a href="#15-3-糟糕至极" class="headerlink" title="15.3 糟糕至极"></a><strong>15.3</strong> <strong>糟糕至极</strong></h3><p>糟糕至极是一种认为如果一件不好的事情发生将是非常可怕，非常糟糕，是指一种灾难的想法</p>
<h2 id="16、抑郁症的特征"><a href="#16、抑郁症的特征" class="headerlink" title="16、抑郁症的特征"></a><strong>16、抑郁症的特征</strong></h2><p>抑郁症的典型症状是“三低”：情绪情感低落，思维迟缓，意志活动减少</p>
<p>一些患者还伴有思维内容障碍，如自责观念或妄想，甚至还有厌世轻生倾向</p>
<p>重度抑郁症发作期的自杀企图和自杀行为倾向突出</p>
<p>部分患者伴有躯体症状，如身体多器官不适，疲乏无力，食欲性欲下降，体重减轻，入睡困难或早醒</p>
<p>持续两周以上</p>
<h2 id="17、躁狂症的特征"><a href="#17、躁狂症的特征" class="headerlink" title="17、躁狂症的特征"></a><strong>17、躁狂症的特征</strong></h2><p>“三高”：情绪情感高涨、思维活动加速、活动增多</p>
<p>部分患者伴有思维内容障碍，如夸大观念，扩大妄想，过分夸大自己的才智、身份、地位、经济实力</p>
<p>部分患者伴有躯体症状：便秘、食欲增加、性欲亢进、睡眠减少、体力过分消耗、体重减轻、红光满面、神采奕奕</p>
<p><strong>抑郁躁狂症（双相情感障碍）的特征：</strong></p>
<p>有时抑郁，有时躁狂</p>
<p>青少年多发</p>
<h2 id="19、创伤后应激障碍（PTSD）的特征"><a href="#19、创伤后应激障碍（PTSD）的特征" class="headerlink" title="19、创伤后应激障碍（PTSD）的特征"></a><strong>19、创伤后应激障碍（PTSD）的特征</strong></h2><p>重大刺激性事件或创伤性事件发生数日或数月后，反复或持续发生闯入性的创伤性体验重现、噩梦，或因面临与刺激相似或有关的情境而感到痛苦不堪，伴有心悸、冷汗、面色发白等身体症状，错觉、幻觉、持续的警觉性增高，睡眠障碍，易激惹，难以集中注意，回避相关或类似情景或有关人，对创伤性经历的选择性遗忘，对未来失去信心，社会功能严重受损，严重者甚至可能有人格改变或人格解离</p>
<h2 id="20、强迫症"><a href="#20、强迫症" class="headerlink" title="20、强迫症"></a><strong>20、强迫症</strong></h2><p>强迫症（OCD）属于焦虑障碍的一种类型，是一组以强迫思维和强迫行为为主要临床表现的神经精神疾病，其特点为有意识的强迫和反强迫并存，一些毫无意义、甚至违背自己意愿的想法或冲动反反复复侵入患者的日常生活。患者虽体验到这些想法或冲动是来源于自身，极力抵抗，但始终无法控制，二者强烈的冲突使其感到巨大的焦虑和痛苦，影响学习工作、人际交往甚至生活起居</p>
<p>有研究显示普通人群中的强迫症的终生患病率为1%<del>2%，世界卫生组织（WHO）所做的全球疾病调查中发现，强迫症已成为15</del>44岁中青年人群中造成疾病负担重的20重疾病之一。延误治疗的情形比较多</p>
<h2 id="21、精神分裂症的特征"><a href="#21、精神分裂症的特征" class="headerlink" title="21、精神分裂症的特征"></a><strong>21、精神分裂症的特征</strong></h2><p>精神分裂症是一种精神活动与现实环境相脱离，认知过程、情感过程、意志过程与个性特征等各方面互不协调、彼此分裂的精神病</p>
<p>急性临床表现为思维障碍（联想散漫、言语破碎、思维中断）、情感障碍（情感淡漠、情感不协调）；幻觉（幻听、幻视等）；妄想（被害妄想、关系妄想、夸大妄想、疑病妄想、被控制感、嫉妒妄想、钟情妄想）等阳性症状为主</p>
<p>慢性临床表现则以缺乏动力、缺乏精力、缺乏兴趣、缺乏情感、缺乏礼仪、缺乏社交等精神功能衰退或缺失的阴性症状为主</p>
<h2 id="影响心理健康的因素——遗传，疾病，应激事件，原生家庭，社会文化"><a href="#影响心理健康的因素——遗传，疾病，应激事件，原生家庭，社会文化" class="headerlink" title="影响心理健康的因素——遗传，疾病，应激事件，原生家庭，社会文化"></a><strong>影响心理健康的因素——</strong>遗传，疾病，应激事件，原生家庭，社会文化</h2><p>由于人的心理健康是一个具有相对独立性质的极为复杂的动态过程，因而制约心理健康，造成心理偏差、心理障碍或心理疾病的因素也是极其复杂多样的。从各种制约因素的性质来说，主要有生物遗传因素、心理环境因素和社会环境因素。从各种制约因素的功能来说，可以分为本体因素与诱发因素两大类。</p>
<p>　　本体因素是一个人心理健康状况发生变化的内在原因，而诱发因素则是产生变化的外在原因。诱发因素通过本体因素而发生作用，它决定着人的心理健康状况变化的现实性。例如，紧张的学习生活，对于心理功能状况良好的学生来说，会激发更高的学习热情，投入更多的学习精力；而对于心理功能状况较差的学生来说，有可能引起过度焦虑，导致产生心理障碍。下面简要阐述本体因素和诱发因素对心理健康的影响</p>
<h3 id="一、本体因素"><a href="#一、本体因素" class="headerlink" title="一、本体因素"></a>一、本体因素</h3><p>　　本体因素是个体自身所具有的一种内在的、主观的因素。主要包括个体的生物遗传因素和心理活动因素。</p>
<h3 id="1-生物遗传因素"><a href="#1-生物遗传因素" class="headerlink" title="1.生物遗传因素"></a>1.生物遗传因素</h3><p>　　生物遗传因素的影响主要有遗传因素、病菌或病毒感染、脑外伤或化学中毒，以及躯体疾病或生理机能障碍等。</p>
<p>　　第一，遗传因素。一般讲，人的心理活动是不能遗传的。但是，一个人作为身心兼备的整体，与遗传因素的关系又是十分密切的，特别是一个人的躯体、气质、智力、神经过程的活动特点等，受遗传因素的影响更为明显。根据调查和临床观察，在精神病患者的家族中，患精神发育不全、抽疯发作、性情乖僻、躁狂抑郁等神经精神病或异常心理行为的人占相当比例。例如，对躁狂抑郁症和精神分裂症患者亲属的患病率的调查数据显示，精神疾病发病的原因确实具有明显的血缘关系，血缘关系越亲近，患病率越高，而这正是遗传因素的影响。</p>
<p>　　第二，病菌或病毒感染。临床研究证明，中枢神经系统的传染病，如斑疹伤寒、流行性脑炎等，由于病菌、病毒损害神经组织结构而导致器质性心理障碍或精神失常，它可以阻抑心理的发展，造成智力迟滞或痴呆。</p>
<p>　　第三，脑外伤或化学中毒。由种种原因造成的脑震荡、脑挫伤等，都可以导致意识障碍、健忘症、言语障碍、人格改变等心理障碍；由于有害化学物质侵入人体，毒害中枢神经系统，如酒精中毒、食物中毒、煤气中毒、药物中毒等，亦可导致心理障碍或精神失常。</p>
<p>第四，严重躯体疾病或生理机能障碍。这方面的影响也是造成心理障碍和精神失常的原因之一。例如内分泌机能障碍中，最突出的如甲状腺机能混乱、机能亢进时，往往出现敏感、暴躁、易怒、情绪冲动、自制力减弱等心理异常表现；肾上腺素分泌过多会引起躁狂症，而肾上腺素分泌不足则可能导致抑郁症等。</p>
<h3 id="2-心理活动因素"><a href="#2-心理活动因素" class="headerlink" title="2.心理活动因素"></a>2.心理活动因素</h3><p>　　心理活动即心理状态。个体的心理状态一旦形成，就会影响以后的心理发展和变化。心理活动因素主要包括认知因素、情绪因素和个性因素等。</p>
<p>　　第一，认知因素。认知是指人认识客观事物，反映客观事物的特性与联系，并揭露客观事物对人的意义和作用的心理活动。认知过程就是信息的获得、贮存、转换、提取和使用的过程。人类个体的认知因素涉及的范围极广，主要有感知、注意、记忆、想象、思维、言语等。</p>
<p>　　每一个体都具有各种认知因素。这些认知因素自身的发展和各认知因素之间的关系可能是协调的，也可能是不协调的。一旦某一认知因素发展不正常或某几种认知因素之间的关系失调，就会产生认知矛盾和冲突。这种矛盾和冲突，会使人感到紧张、烦躁和焦虑，于是想极力减轻或消除。</p>
<p>　　认知因素之间的失调程度越严重，则人们期望减轻或消除失调，维持平衡的动机也就越强烈。如果这种需要和动机长时间得不到满足，不能实现，则可能产生心理偏差或心理障碍。认知的严重失调，还会损坏人格的完整性和协调性，甚至导致人格变态。</p>
<p>　　第二，情绪因素。人的情绪体验是多维度、多成分、多层次的。它是一个人机体生存和社会适应的内在动力，是维持身心健康的重要因素。</p>
<p>　　一般地讲，稳定而积极的正性情绪状态，使人心境愉快、安定，精力充沛、适度，身体舒适、有力；相反，经常波动而消极的负性情绪状态，则往往使人心境压抑、焦虑，精力涣散、失控，身体衰弱、元力。因此，培养良好的正性情绪，排除不良的负性情绪，有益于人们的身心健康。</p>
<p>　　第三，个性因素。个性因素亦可称人格因素。个性因素包括性格、气质、能力和个性倾向性等因素。个性因素是心理活动因素的核心，它对一个人的心理健康影响最大。例如，同样一种生活挫折，对不同个性的人，其影响程度完全不同。有的人可能无法承受，或消极应付，从此自暴自弃；有的人则可能接受现实，正视挫折，加倍努力，奋发图强。研究表明，特殊人格特征往往是导致相应精神疾病，特别是神经官能症的发病基础。例如，谨小慎微、求全求美、优柔寡断、墨守成规、敏感多疑、心胸狭窄、事事后悔、苛求自己等强迫性人格特征，很容易导致强迫性神经症；再如，易受暗示、耽于幻想、情绪多变、容易激惹、自我中心、自我表现等特殊人格特征，很容易导致癔病症。因此，培养健全的人格，是保持身心健康的关键因素之一。</p>
<h2 id="二、诱发因素"><a href="#二、诱发因素" class="headerlink" title="二、诱发因素"></a>二、诱发因素</h2><p>　　诱发因素是直接引起心理问题的外在的、客观的因素。主要包括家庭因素、学校因素和社会因素。</p>
<h3 id="1-家庭因素"><a href="#1-家庭因素" class="headerlink" title="1.家庭因素"></a>1.家庭因素</h3><p>　　对中小学儿童的身心健康来说，家庭的影响很大。国内外大量研究表明，不良家庭环境因素容易造成家庭成员的心理行为异常。这些因素主要有：家庭主要成员变动，如父母死亡、父母离异或分居、父母再婚等；家庭关系紧张，如父母关系、婆媳关系、姑嫂关系、兄弟姐妹关系不和谐，家庭情感气氛冷漠，矛盾冲突频繁等；家庭教育方式不当，如专制粗暴、强迫压服，或溺爱娇惯、放任自流等；以及家庭变迁，出现意外事件等。</p>
<h3 id="2-学校因素"><a href="#2-学校因素" class="headerlink" title="2.学校因素"></a>2.学校因素</h3><p>　　学校是学生学习、生活的主要场所，学生的大部分时间是在学校中度过的。因此，学校生活对学生的身心健康影响也很大。学校因素主要有学校教育条件、学习条件、生活条件，以及师生关系、同伴关系等。这些条件和关系如果处理不当，就会影响学生的身心健康发展。例如，校风学风不振、学习负担过重、教育方法不当、师生情感对立、同学关系不和谐等，都会使学生的心理压抑，精神紧张、焦虑，如不及时调适，就会造成心理失调，导致心理障碍。</p>
<h3 id="3-社会因素"><a href="#3-社会因素" class="headerlink" title="3.社会因素"></a>3.社会因素</h3><p>　　社会因素主要包括政治、经济、文化教育、社会关系等，这些因素对一个人的生存和发展起着决定作用。其中社会生活中的种种不健康的思想、情感和行为，严重地毒害着学生的心灵。特别在当前，人与人之间的交往日益广泛，各种社会传媒的作用越来越大，生活紧张事件增多，矛盾、冲突、竞争加剧。所有这些现象都会加重学生的心理负担和内心矛盾，影响身心健康。</p>
<p>　　总之，上述各种因素是相互制约的，对一个人的身心健康往往是综合起作用的。因此，我们在观察、分析、诊断心理失调、心理障碍或心理疾病时，务必要充分考虑各种因素的作用，逐一考查，逐一排除，全面正确地作出诊断，采取有效的措施进行调适和治疗。</p>
]]></content>
      <categories>
        <category>SJTU</category>
      </categories>
      <tags>
        <tag>心理健康</tag>
      </tags>
  </entry>
  <entry>
    <title>每天涨一点知识</title>
    <url>/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E5%A4%A9%E6%B6%A8%E4%B8%80%E7%82%B9%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>每天涨一点知识</p>
<span id="more"></span>

<h2 id="1-关于网页www前缀的问题"><a href="#1-关于网页www前缀的问题" class="headerlink" title="1.关于网页www前缀的问题"></a>1.关于网页www前缀的问题</h2><p>​        在输入豆瓣电影网址（movie.douban.com）的时候我在地址栏输入”<a href="http://www.movie.douban.com“,/">www.movie.douban.com“，</a> 意外的是，竟然无法访问，尝试重新输了几次，还是不行。后来尝试着把www去掉，就能正常访问了。</p>
<p>​        在这之前，在我的认知里，“www”在输网址的时候都是可有可无的存在，访问结果都是一样的，但这件事告诉我并没有这么简单。所以我去搜索了一下。</p>
<p><a href="https://zhuanlan.zhihu.com/p/364693787">网址需要加www吗？ - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.zhihu.com/question/20414602">为什么越来越多的网站域名不加「www」前缀？ - 知乎 (zhihu.com)</a></p>
<p>​        果然，又是日常容易被忽略的东西呢。</p>
<h2 id="2-爬虫爬取网页遇到”-xa0”怎么办"><a href="#2-爬虫爬取网页遇到”-xa0”怎么办" class="headerlink" title="2.爬虫爬取网页遇到”\xa0”怎么办"></a>2.爬虫爬取网页遇到”\xa0”怎么办</h2><p><a href="https://www.cnblogs.com/yqpy/p/8203783.html">python如何去掉字符串‘\xa0’ - 嶙羽 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/thewindkee/article/details/79890207">(7条消息) python 爬虫爬取内容时， \xa0 、 \u3000 的含义与处理方法_thewindkee的博客-CSDN博客_\xa0\xa0</a></p>
<h2 id="3-python-整个列表的数据类型转换"><a href="#3-python-整个列表的数据类型转换" class="headerlink" title="3.python 整个列表的数据类型转换"></a>3.python 整个列表的数据类型转换</h2><p>在使用线性回归算法预测气温时，发现从网页上爬取的温度是str类型的，需要转换成num类型，尝试了以下方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">new = [[<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>], [<span class="string">&#x27;3&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> new:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">        j = <span class="built_in">float</span>(j)</span><br></pre></td></tr></table></figure>

<p>但是并没有用。</p>
<p>感觉使用for循环一个一个元素去强制转换会有点复杂，我尝试上网搜了一下，能不能直接转换整个列表元素类型的函数。</p>
<p><a href="https://blog.csdn.net/chinacmt/article/details/68488918">(7条消息) python修改list中所有元素类型_chinacmt的博客-CSDN博客_python改变list中的类型</a></p>
<p>这篇博客详细介绍了三种方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">new = <span class="built_in">list</span>()</span><br><span class="line">a = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> a:</span><br><span class="line">    new.append(<span class="built_in">int</span>(x))</span><br><span class="line"><span class="built_in">print</span>(new)</span><br></pre></td></tr></table></figure>

<p>这种方法最容易想到，就是一个一个转换，但是，对于二维的列表（有一定结构）不好使</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line">b = [<span class="built_in">int</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> a]</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>

<p>这个对于二维及以上的也有用，而且不会破坏原有的结构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line">b = <span class="built_in">map</span>(<span class="built_in">int</span>, a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    <span class="built_in">print</span>(i, <span class="built_in">type</span>(i))</span><br></pre></td></tr></table></figure>

<p>这种方法同样也只适用于一维结构，而且，map的返回值是map object，需要强制转换成list</p>
<p>我想了一下，第三种方法配合for循环也能实现高维结构</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">new = [[<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>], [<span class="string">&#x27;3&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">new1 =[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(new)):</span><br><span class="line">    new1.append(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">float</span>, new[i])))</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>这样确实不会破坏原有的结构，但是也确实麻烦，还是用第二种方法吧</p>
<h2 id="4-阿里云盘秒传"><a href="#4-阿里云盘秒传" class="headerlink" title="4.阿里云盘秒传"></a>4.阿里云盘秒传</h2><p>再阿里云盘上传文件时，发现有些1G多的文件竟然瞬间（不夸张）就上传完成了，一开始我还以为是刚下载的文件的文件上唇速度很快，然后搜了一下，发现并不是：</p>
<p><a href="https://developer.aliyun.com/article/42506">【转】烂泥：网盘的秒传原理-阿里云开发者社区 (aliyun.com)</a></p>
<h2 id="5-安装Ubuntu时遇到的问题"><a href="#5-安装Ubuntu时遇到的问题" class="headerlink" title="5.安装Ubuntu时遇到的问题"></a>5.安装Ubuntu时遇到的问题</h2><p>安装界面太小导致继续等按钮显示不出来，按住win键＋鼠标左键可以拖动窗口</p>
<h2 id="6-pak文件"><a href="#6-pak文件" class="headerlink" title="6.pak文件"></a>6.pak文件</h2><p>在翻wildlif时发现了游戏所占的大部分空间为一个pak类型的文件，这是一个压缩类型的文件，游戏用的比较多，比如植物大战僵尸</p>
<p><a href="https://zhuanlan.zhihu.com/p/400950006">Pak文件格式说明 - 知乎 (zhihu.com)</a></p>
<h2 id="7-如何使某个文件夹内的图片不被显示在相册里？"><a href="#7-如何使某个文件夹内的图片不被显示在相册里？" class="headerlink" title="7.如何使某个文件夹内的图片不被显示在相册里？"></a>7.如何使某个文件夹内的图片不被显示在相册里？</h2><p>很多游戏内图片被扫描进去，多达几千张，显得很乱。</p>
<p>解决方法：在不想被扫描的文件夹里创建一个名为“.nomedia”的空文件夹即可。</p>
<p>此方法对视频、音频同样有效，但对安装包等其它文件没有用。</p>
<p><a href="https://blog.csdn.net/qq_39994562/article/details/107310118">(7条消息) android 图片保存到文件夹中 但不在本地图库中显示_王虫虫就爱吃的博客-CSDN博客</a></p>
<p>2022/7/21更新</p>
<p>.nomedia文件夹功能似乎失效，但创建.nomedia文件仍可用（使用第三方文件管理器如mt，es等</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>线代编程作业</title>
    <url>/SJTU/%E7%BA%BF%E4%BB%A3%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<p>SJTU线性代数编程作业</p>
<span id="more"></span>

<h2 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h2><p>(一)任意选一种数学软件如Mathematica,MATLAB,Maple，或你学过的其它编程软件如C++计算:</p>
<p>(1)计算23阶行列式D</p>
<p>(2)对9x13矩阵A,做行初等变换求A的规范的阶梯形矩阵H和方程AX=0的通解</p>
<p>(3)求A的列向量组的一个极大无关组,并对得到的极大无关组施行Schmidt正交化求标准正交组.</p>
<p>(二)行列式D(矩阵A)的产生:</p>
<p>设D=dij23.则0&lt;=dij&lt;=9都是整数,利用你的学号构造一个一位整数构成的数列.把学号的每一位上数(从左到右)作为数列的一项;把每一位的</p>
<p>平方拆成一位数作为数列的一项;把每一位的立方拆成一位数作为数列的每一项;这样依次下去，直到得到足够多的项.把所得到的数列的各</p>
<p>项依次排在行列式的各行上.</p>
<p>例如:你的学号是1234567890.则一个13阶的行列式如下:</p>
<p><img src="/SJTU/%E7%BA%BF%E4%BB%A3%E7%BC%96%E7%A8%8B%E4%BD%9C%E4%B8%9A/1.png"></p>
<p>(三)程序输入为你的学号(可以作为一个整体,也可以逐位输入),输出为行列式(最后结果)、规范的阶梯阵、极大无关组与标准正交组。上传</p>
<p>文件为源文件与输出文件.</p>
<h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><h3 id="c-生成23阶矩阵"><a href="#c-生成23阶矩阵" class="headerlink" title="c++生成23阶矩阵"></a>c++生成23阶矩阵</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">my_length</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (p == <span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (p == <span class="number">0</span>)<span class="keyword">return</span> i;</span><br><span class="line">		p /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;输入12位学号，空格间隔输入或者每输一个就换行&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">int</span> line[<span class="number">529</span>];</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> temp;</span><br><span class="line">	<span class="keyword">int</span>  k = <span class="number">11</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cin &gt;&gt; line[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> cont = <span class="number">2</span>;; cont++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			temp = <span class="built_in">pow</span>(line[i], cont);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">my_length</span>(<span class="built_in">pow</span>(line[i], cont)); j &gt; <span class="number">0</span>; j--)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (k + j &gt; <span class="number">528</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					temp /= <span class="number">10</span>;</span><br><span class="line">					<span class="keyword">continue</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				line[k + j] = temp % <span class="number">10</span>;</span><br><span class="line">				temp /= <span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			k = k + <span class="built_in">my_length</span>(<span class="built_in">pow</span>(line[i], cont));</span><br><span class="line">			<span class="keyword">if</span> (k &gt;= <span class="number">528</span>)<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (k &gt;= <span class="number">528</span>)<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">529</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; line[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		<span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">23</span> == <span class="number">0</span>)cout &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="matlab"><a href="#matlab" class="headerlink" title="matlab"></a>matlab</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">&#x27;23x23矩阵A为&#x27;</span>);</span><br><span class="line"><span class="comment">%将生成的23阶矩阵粘贴在A处</span></span><br><span class="line">A=[]</span><br><span class="line"></span><br><span class="line"><span class="comment">%第(1)题：生成23阶矩阵D1并计算行列式D</span></span><br><span class="line">fprintf(<span class="string">&#x27;A的行列式为&#x27;</span>);</span><br><span class="line">D=det(A)</span><br><span class="line"></span><br><span class="line"><span class="comment">%第(2)题：生成9x13矩阵A并化为阶梯形矩阵</span></span><br><span class="line">A1=<span class="built_in">zeros</span>(<span class="number">9</span>,<span class="number">13</span>);</span><br><span class="line">fprintf(<span class="string">&#x27;9x13矩阵A1为&#x27;</span>);</span><br><span class="line">A1(<span class="number">1</span>:<span class="number">9</span>,<span class="number">1</span>:<span class="number">13</span>)=A(<span class="number">1</span>:<span class="number">9</span>,<span class="number">1</span>:<span class="number">13</span>)</span><br><span class="line">fprintf(<span class="string">&#x27;化为规范阶梯型&#x27;</span>);</span><br><span class="line">H=rref(A1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%求基础解系</span></span><br><span class="line">format <span class="built_in">rat</span>;</span><br><span class="line">fprintf(<span class="string">&#x27;基础解系&#x27;</span>);</span><br><span class="line">x=null(A1,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%第(3)题B为极大无关组，C为是施密特正交化后的结果</span></span><br><span class="line">[H <span class="built_in">j</span>]=rref(A1);</span><br><span class="line">fprintf(<span class="string">&#x27;极大无关组为&#x27;</span>);</span><br><span class="line">B=A1(:,<span class="built_in">j</span>)</span><br><span class="line">fprintf(<span class="string">&#x27;施密特正交化后&#x27;</span>);</span><br><span class="line">C=Schmidt_orthogonalization(B)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>=<span class="title">Schmidt_orthogonalization</span><span class="params">(A)</span></span></span><br><span class="line">[m,n] = <span class="built_in">size</span>(A);</span><br><span class="line">b=<span class="built_in">zeros</span>(m,n);</span><br><span class="line"><span class="comment">%正交化</span></span><br><span class="line">b(:,<span class="number">1</span>)=A(:,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">i</span><span class="number">-1</span></span><br><span class="line">        b(:,<span class="built_in">i</span>)=b(:,<span class="built_in">i</span>)-<span class="built_in">dot</span>(A(:,<span class="built_in">i</span>),b(:,<span class="built_in">j</span>))/<span class="built_in">dot</span>(b(:,<span class="built_in">j</span>),b(:,<span class="built_in">j</span>))*b(:,<span class="built_in">j</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    b(:,<span class="built_in">i</span>)=b(:,<span class="built_in">i</span>)+A(:,<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%单位化</span></span><br><span class="line"> <span class="keyword">for</span> k=<span class="number">1</span>:n</span><br><span class="line">     b(:,k)=b(:,k)/norm(b(:,k));</span><br><span class="line"> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>SJTU</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>线代</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾hexo</title>
    <url>/Hexo/%E9%87%8D%E6%8B%BEhexo/</url>
    <content><![CDATA[<p>一年半</p>
<span id="more"></span>

<h3 id="2023-06-29"><a href="#2023-06-29" class="headerlink" title="2023.06.29"></a>2023.06.29</h3><h4 id="来历"><a href="#来历" class="headerlink" title="来历"></a>来历</h4><p>从零（×）开始搭建个人博客</p>
<img src="image-20230629161008238.png" alt="image-20230629161008238" style="zoom: 50%;" />

<p>目前的样子，貌似是21.12.25做的，后来就没怎么管过，现在已经完全忘记怎么做的了，那个视频也没有保存（悲</p>
<p>这个样式现在看来也不是那么好看了</p>
<p>所以，这个暑假要重新做一个博客！</p>
<h4 id="第一步：准备工作，安装nodejs，git，hexo"><a href="#第一步：准备工作，安装nodejs，git，hexo" class="headerlink" title="第一步：准备工作，安装nodejs，git，hexo"></a>第一步：准备工作，安装nodejs，git，hexo</h4><p><a href="https://nodejs.org/">nodejs.org</a></p>
<p><a href="https://git-scm.com/">Git (git-scm.com)</a></p>
<p>安装两个时都需要注意勾选添加进PATH</p>
<p>使用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>来安装hexo</p>
<p>安装后，在合适位置创建你的博客文件夹，进入文件夹，右键进入git bash，使用如下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>初始化hexo，然后就会看到初始化的一些文件夹和文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>在浏览器输入localhost:4000即可在本地看到博客网页了。</p>
<h4 id="第二步：创建github仓库，并添加ssh公钥。"><a href="#第二步：创建github仓库，并添加ssh公钥。" class="headerlink" title="第二步：创建github仓库，并添加ssh公钥。"></a>第二步：创建github仓库，并添加ssh公钥。</h4><p>创建一个“你的用户名.github.io”的仓库，只有这样，将来要部署到GitHub page的时候，才会被识别。</p>
<p>打开设置，ssh，将公钥全部复制进去即可。</p>
<h5 id="ssh密钥是什么"><a href="#ssh密钥是什么" class="headerlink" title="ssh密钥是什么"></a>ssh密钥是什么</h5><p>ssh是一种远程登录服务器的一种方式，密钥则是ssh的安全验证，通过创建私人密钥和公用密钥来实现登录验证。</p>
<p>密钥验证登录 </p>
<ol>
<li>客户端生成公钥和私钥，将公钥提前部署在服务器上。 </li>
<li>客户端发起连接请求。 </li>
<li>服务器随机生成一个字符串，用本地的公钥加密，发送给客户端。 </li>
<li>客户端通过私钥解密，将解密后的字符串发送给服务器。 </li>
<li>服务器验证本地字符串和客户端发来的字符串的一致性，如果通过，则认证成功。</li>
</ol>
<h5 id="如何生成ssh密钥"><a href="#如何生成ssh密钥" class="headerlink" title="如何生成ssh密钥"></a>如何生成ssh密钥</h5><p>windows上在git bash通过命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p>来生成密钥</p>
<p>以下是来自微软官方的解释<a href="https://learn.microsoft.com/zh-cn/azure/virtual-machines/linux/create-ssh-keys-detailed">创建 SSH 密钥对的详细步骤 - Azure Virtual Machines | Microsoft Learn</a></p>
<img src="image-20230629170659380.png" style="zoom:67%;" />

<p>youremail是git保存的邮箱，具体见下述链接<a href="https://zhuanlan.zhihu.com/p/120862483">如何配置 Git 用户名和邮件地址 - 知乎 (zhihu.com)</a></p>
<p>这时候会在user文件夹下生成一个.ssh文件夹，里面包含了私钥和公钥，公钥相比私钥包含了.pub后缀名。</p>
<h4 id="第三步：将hexo部署到github"><a href="#第三步：将hexo部署到github" class="headerlink" title="第三步：将hexo部署到github"></a>第三步：将hexo部署到github</h4><p>首先配置hexo的配置文件。进入博客文件夹，打开_config.yml，到最后，修改deploy块为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27; </span><br><span class="line">  repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>然后安装deploy-git，即部署要用的命令。</p>
<p>在cmd中输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>其中hexo clean，即清除之前生成的东西。</p>
<p>hexo g为hexo generate，即根据你博客这个文件夹生成静态网页。</p>
<p>hexo d为hexo deply，即将博客部署到github</p>
<p>以后更新博客时用到的就是这三个命令。</p>
<p>可以在<a href="http://yourname.github.io看到你的博客了(更新会有延迟)./">http://yourname.github.io看到你的博客了（更新会有延迟）。</a></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>今天主要参考<a href="https://www.cnblogs.com/jscs/p/13582883.html">hexo史上最全搭建教程 - JS脚本 - 博客园 (cnblogs.com)</a></p>
<p>正好摸鱼要下班了，明天更新hexo的配置、主题等内容。</p>
<h3 id="2023-06-30"><a href="#2023-06-30" class="headerlink" title="2023.06.30"></a>2023.06.30</h3><p>今天写一写hexo的配置，官网<a href="https://hexo.io/zh-cn/">Hexo</a></p>
<p>发现hexo官网就有详细的安装、建站、部署教程，突然感觉昨天找了那么久的教程是浪费时间。</p>
<p>先放版本Hexo-6.0，Next-8.17.1，后续版本文件结构可能会有变化</p>
<img src="image-20230705111011824.png" alt="image-20230705111011824" style="zoom: 67%;" />

<h4 id="图片资源显示问题"><a href="#图片资源显示问题" class="headerlink" title="图片资源显示问题"></a>图片资源显示问题</h4><p>在昨天写这个博客的时候，我就隐隐约约记得博客的图片显示貌似有点问题。今天看了官网的教程和搜了一下“typora与hexo”后，我大概明白了问题所在。</p>
<p><strong>主要矛盾在于相对路径的不统一。</strong></p>
<p>在使用typora插入图片时，通常采用相对路径的方式，例如在blog文件夹下，有“重拾hexo.md”文件和同名文件夹，同名文件夹中存放该md文件的图片，那么在typora引用该文件时，可以采用该方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](重拾hexo/1.png)</span><br></pre></td></tr></table></figure>

<p>而在hexo中，官方给出的嵌入图片方式如图</p>
<img src="image-20230630111503116.png" alt="image-20230630111503116" style="zoom:67%;" />

<p>其中post_asset_folder为true时，hexo会在创建文章时自动生成同名文件夹，听起来似乎和typora相性很好，但是实际上，后面的例子说明，<strong>资源图片会被自动解析为其对应文章的路径</strong>，即在上个例子中，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](1.png)</span><br></pre></td></tr></table></figure>

<p>即可在hexo中显示图片，但是这在本地typora预览时图片却是不可见的，这就是矛盾之处。</p>
<h4 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h4><p>yilla用的有点腻了，而且越发觉得观感有问题，没有（一直显示的）目录，文章栏过大等等，决定换一个用用。</p>
<p>先选择了next这个比较广为人知的，遇到问题好解决。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>安装next</p>
<img src="image-20230703160328452.png" alt="image-20230703160328452" style="zoom: 33%;" />

<p>这是目前的样子，接下来进行改造。</p>
<h5 id="四个样式预览"><a href="#四个样式预览" class="headerlink" title="四个样式预览"></a>四个样式预览</h5><p>muse</p>
<img src="image-20230703161711714.png" alt="image-20230703161711714" style="zoom:33%;" />

<p>mist</p>
<img src="image-20230703171849469.png" alt="image-20230703171849469" style="zoom:33%;" />

<p>Pisces</p>
<img src="image-20230703172012504.png" alt="image-20230703172012504" style="zoom:33%;" />

<p>Gemini</p>
<p>好像和Pisecs差不多，就不放图了</p>
<h5 id="改造部分"><a href="#改造部分" class="headerlink" title="改造部分"></a>改造部分</h5><p>主要参照<a href="https://zhuanlan.zhihu.com/p/618864711">Hexo+Next主题搭建个人博客+优化全过程（完整详细版） - 知乎 (zhihu.com)</a>和<a href="https://hexo-next.readthedocs.io/zh_CN/latest/">Hexo-NexT</a>以及<a href="https://zhuanlan.zhihu.com/p/30836436">Hexo+Next主题优化 - 知乎 (zhihu.com)</a></p>
<p>目前修改项有：</p>
<p>1.切换样式为Pisces</p>
<p>2.菜单增加关于、标签、归档，并添加数字</p>
<p>3.修改文章间距线宽度和长度，添加边框阴影</p>
<p>4.右上角增加github</p>
<p>5.菜单增加github链接和Email</p>
<p>6.网站底“小红心”改为“by”，”由”“强力驱动“改为“Thanks”，去除样式提示，修改字体颜色。</p>
<p>7.增加文章字数提示</p>
<p>8.打开底部tag_icon</p>
<p>9.代码块高亮主题修改（未成功）</p>
<p>10.添加背景图</p>
<p>11.添加评论</p>
<p>12.菜单栏和侧边栏修改透明度、添加阴影和圆角</p>
<p>13.添加头像</p>
<p>已知问题：代码高亮主题修改报错，大概是路径斜杠问题</p>
<p><img src="/Hexo/%E9%87%8D%E6%8B%BEhexo/image-20230704160613936.png" alt="image-20230704160613936"></p>
<p><a href="https://zhuanlan.zhihu.com/p/252983030">Ubuntu + Hexo + Next 8.0 进阶美化篇二 - 知乎 (zhihu.com)</a></p>
<p>目前的样子</p>
<img src="image-20230705110502037.png" alt="image-20230705110502037" style="zoom: 50%;" />

<p>后面可能会单独出一篇美化教程。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
